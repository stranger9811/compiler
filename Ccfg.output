Terminals unused in grammar

   T_BREAK
   T_CONTINUE
   T_GOTO
   T_RETURN
   T_PRINTF
   T_SCANF
   T_SIZEOF
   T_UNSIGNED
   T_SIGNED
   T_CONST
   T_SHORT
   T_EXTERN
   T_LONG
   T_APOS
   T_STRING
   T_PLUS_SELF
   T_MINUS_SELF
   T_MULT_SELF
   T_DIVIDE_SELF
   T_THIS_POINTER
   T_ADD_ONE
   T_SUB_ONE
   T_IO_INT
   T_IO_LONG_LONG
   T_IO_STRING
   T_IO_FLOAT
   '|'
   '^'
   '&'
   '.'


Grammar

    0 $accept: code $end

    1 code: decl code
    2     | decl

    3 decl: type identifier ';'
    4     | T_TYPEDEF type ID ';'
    5     | type func block
    6     | void func block
    7     | T_STRUCT ID block ';'
    8     | T_HEADER

    9 type: type '*'
   10     | basic

   11 basic: T_LONG_LONG
   12      | T_INT
   13      | T_CHAR
   14      | T_FLOAT
   15      | T_DOUBLE
   16      | T_BOOL

   17 void: void '*'
   18     | T_VOID

   19 func: ID '(' args ')'
   20     | ID '(' ')'
   21     | T_MAIN '(' args ')'
   22     | T_MAIN '(' ')'

   23 args: type identifier ',' args
   24     | type identifier

   25 brac_open: '{'

   26 brac_close: '}'

   27 block: brac_open M brac_close
   28      | S

   29 M: S M
   30  | S

   31 S: S1 ';'
   32  | block_stmt

   33 S1: stmt ',' S1
   34   | stmt
   35   | type init

   36 init: assign_stmt ',' init
   37     | identifier ',' init
   38     | assign_stmt
   39     | identifier

   40 block_stmt: T_IF '(' stmt ')' '{' M '}'
   41           | T_IF '(' stmt ')' T_ELSE '{' M '}'
   42           | T_FOR '(' S1 ';' S1 ';' S1 ')' block
   43           | T_WHILE '(' S1 ')' block

   44 stmt: expr

   45 expr: expr '+' expr
   46     | func
   47     | expr T_EQUAL_TEST expr
   48     | expr '<' expr
   49     | expr '>' expr
   50     | expr T_LESS_THAN_EQUAL expr
   51     | expr T_GREATER_THAN_EQUAL expr
   52     | expr T_NOT_EQUAL expr
   53     | assign_stmt
   54     | expr '-' expr
   55     | expr '*' expr
   56     | expr '/' expr
   57     | expr '%' expr
   58     | expr T_AND Marker_e expr
   59     | expr T_OR Marker_e expr
   60     | '!' expr
   61     | '(' expr ')'
   62     | identifier
   63     | '+' expr
   64     | '-' expr
   65     | number

   66 assign_stmt: identifier '=' expr

   67 Marker_e: %empty

   68 number: T_DEC_INT
   69       | T_DEC_FLOAT

   70 identifier: ID
   71           | ID array

   72 array: '[' ID ']' array
   73      | '[' ID ']'
   74      | '[' T_DEC_INT ']'
   75      | '[' T_DEC_INT ']' array


Terminals, with rules where they appear

$end (0) 0
'!' (33) 60
'%' (37) 57
'&' (38)
'(' (40) 19 20 21 22 40 41 42 43 61
')' (41) 19 20 21 22 40 41 42 43 61
'*' (42) 9 17 55
'+' (43) 45 63
',' (44) 23 33 36 37
'-' (45) 54 64
'.' (46)
'/' (47) 56
';' (59) 3 4 7 31 42
'<' (60) 48
'=' (61) 66
'>' (62) 49
'[' (91) 72 73 74 75
']' (93) 72 73 74 75
'^' (94)
'{' (123) 25 40 41
'|' (124)
'}' (125) 26 40 41
error (256)
T_STRUCT (258) 7
T_BREAK (259)
T_CONTINUE (260)
T_TYPEDEF (261) 4
T_CHAR (262) 13
T_DOUBLE (263) 15
T_INT (264) 12
T_FLOAT (265) 14
T_LONG_LONG (266) 11
T_FOR (267) 42
T_IF (268) 40 41
T_ELSE (269) 41
T_WHILE (270) 43
T_GOTO (271)
T_RETURN (272)
T_PRINTF (273)
T_VOID (274) 18
T_SCANF (275)
T_SIZEOF (276)
T_UNSIGNED (277)
T_SIGNED (278)
T_CONST (279)
T_SHORT (280)
T_EXTERN (281)
T_LONG (282)
T_BOOL (283) 16
T_APOS (284)
T_DEC_FLOAT (285) 69
T_DEC_INT (286) 68 74 75
T_STRING (287)
T_HEADER (288) 8
ID (289) 4 7 19 20 70 71 72 73
T_MAIN (290) 21 22
T_AND (291) 58
T_GREATER_THAN_EQUAL (292) 51
T_LESS_THAN_EQUAL (293) 50
T_EQUAL_TEST (294) 47
T_NOT_EQUAL (295) 52
T_OR (296) 59
T_PLUS_SELF (297)
T_MINUS_SELF (298)
T_MULT_SELF (299)
T_DIVIDE_SELF (300)
T_THIS_POINTER (301)
T_ADD_ONE (302)
T_SUB_ONE (303)
T_IO_INT (304)
T_IO_LONG_LONG (305)
T_IO_STRING (306)
T_IO_FLOAT (307)
DEREF (308)
UPLUS (309)
UMINUS (310)


Nonterminals, with rules where they appear

$accept (77)
    on left: 0
code (78)
    on left: 1 2, on right: 0 1
decl (79)
    on left: 3 4 5 6 7 8, on right: 1 2
type (80)
    on left: 9 10, on right: 3 4 5 9 23 24 35
basic (81)
    on left: 11 12 13 14 15 16, on right: 10
void (82)
    on left: 17 18, on right: 6 17
func (83)
    on left: 19 20 21 22, on right: 5 6 46
args (84)
    on left: 23 24, on right: 19 21 23
brac_open (85)
    on left: 25, on right: 27
brac_close (86)
    on left: 26, on right: 27
block (87)
    on left: 27 28, on right: 5 6 7 42 43
M (88)
    on left: 29 30, on right: 27 29 40 41
S (89)
    on left: 31 32, on right: 28 29 30
S1 (90)
    on left: 33 34 35, on right: 31 33 42 43
init (91)
    on left: 36 37 38 39, on right: 35 36 37
block_stmt (92)
    on left: 40 41 42 43, on right: 32
stmt (93)
    on left: 44, on right: 33 34 40 41
expr (94)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
    63 64 65, on right: 44 45 47 48 49 50 51 52 54 55 56 57 58 59 60
    61 63 64 66
assign_stmt (95)
    on left: 66, on right: 36 38 53
Marker_e (96)
    on left: 67, on right: 58 59
number (97)
    on left: 68 69, on right: 65
identifier (98)
    on left: 70 71, on right: 3 23 24 37 39 62 66
array (99)
    on left: 72 73 74 75, on right: 71 72 75


State 0

    0 $accept: . code $end

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    code   go to state 11
    decl   go to state 12
    type   go to state 13
    basic  go to state 14
    void   go to state 15


State 1

    7 decl: T_STRUCT . ID block ';'

    ID  shift, and go to state 16


State 2

    4 decl: T_TYPEDEF . type ID ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 17
    basic  go to state 14


State 3

   13 basic: T_CHAR .

    $default  reduce using rule 13 (basic)


State 4

   15 basic: T_DOUBLE .

    $default  reduce using rule 15 (basic)


State 5

   12 basic: T_INT .

    $default  reduce using rule 12 (basic)


State 6

   14 basic: T_FLOAT .

    $default  reduce using rule 14 (basic)


State 7

   11 basic: T_LONG_LONG .

    $default  reduce using rule 11 (basic)


State 8

   18 void: T_VOID .

    $default  reduce using rule 18 (void)


State 9

   16 basic: T_BOOL .

    $default  reduce using rule 16 (basic)


State 10

    8 decl: T_HEADER .

    $default  reduce using rule 8 (decl)


State 11

    0 $accept: code . $end

    $end  shift, and go to state 18


State 12

    1 code: decl . code
    2     | decl .

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    $default  reduce using rule 2 (code)

    code   go to state 19
    decl   go to state 12
    type   go to state 13
    basic  go to state 14
    void   go to state 15


State 13

    3 decl: type . identifier ';'
    5     | type . func block
    9 type: type . '*'

    ID      shift, and go to state 20
    T_MAIN  shift, and go to state 21
    '*'     shift, and go to state 22

    func        go to state 23
    identifier  go to state 24


State 14

   10 type: basic .

    $default  reduce using rule 10 (type)


State 15

    6 decl: void . func block
   17 void: void . '*'

    ID      shift, and go to state 25
    T_MAIN  shift, and go to state 21
    '*'     shift, and go to state 26

    func  go to state 27


State 16

    7 decl: T_STRUCT ID . block ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '{'          shift, and go to state 33
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    brac_open    go to state 40
    block        go to state 41
    S            go to state 42
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 17

    4 decl: T_TYPEDEF type . ID ';'
    9 type: type . '*'

    ID   shift, and go to state 50
    '*'  shift, and go to state 22


State 18

    0 $accept: code $end .

    $default  accept


State 19

    1 code: decl code .

    $default  reduce using rule 1 (code)


State 20

   19 func: ID . '(' args ')'
   20     | ID . '(' ')'
   70 identifier: ID .
   71           | ID . array

    '('  shift, and go to state 51
    '['  shift, and go to state 52

    $default  reduce using rule 70 (identifier)

    array  go to state 53


State 21

   21 func: T_MAIN . '(' args ')'
   22     | T_MAIN . '(' ')'

    '('  shift, and go to state 54


State 22

    9 type: type '*' .

    $default  reduce using rule 9 (type)


State 23

    5 decl: type func . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '{'          shift, and go to state 33
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    brac_open    go to state 40
    block        go to state 55
    S            go to state 42
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 24

    3 decl: type identifier . ';'

    ';'  shift, and go to state 56


State 25

   19 func: ID . '(' args ')'
   20     | ID . '(' ')'

    '('  shift, and go to state 51


State 26

   17 void: void '*' .

    $default  reduce using rule 17 (void)


State 27

    6 decl: void func . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '{'          shift, and go to state 33
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    brac_open    go to state 40
    block        go to state 57
    S            go to state 42
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 28

   42 block_stmt: T_FOR . '(' S1 ';' S1 ';' S1 ')' block

    '('  shift, and go to state 58


State 29

   40 block_stmt: T_IF . '(' stmt ')' '{' M '}'
   41           | T_IF . '(' stmt ')' T_ELSE '{' M '}'

    '('  shift, and go to state 59


State 30

   43 block_stmt: T_WHILE . '(' S1 ')' block

    '('  shift, and go to state 60


State 31

   69 number: T_DEC_FLOAT .

    $default  reduce using rule 69 (number)


State 32

   68 number: T_DEC_INT .

    $default  reduce using rule 68 (number)


State 33

   25 brac_open: '{' .

    $default  reduce using rule 25 (brac_open)


State 34

   61 expr: '(' . expr ')'

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 61
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 35

   63 expr: '+' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 62
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 36

   64 expr: '-' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 63
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 37

   60 expr: '!' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 64
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 38

    9 type: type . '*'
   35 S1: type . init

    ID   shift, and go to state 65
    '*'  shift, and go to state 22

    init         go to state 66
    assign_stmt  go to state 67
    identifier   go to state 68


State 39

   46 expr: func .

    $default  reduce using rule 46 (expr)


State 40

   27 block: brac_open . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    M            go to state 69
    S            go to state 70
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 41

    7 decl: T_STRUCT ID block . ';'

    ';'  shift, and go to state 71


State 42

   28 block: S .

    $default  reduce using rule 28 (block)


State 43

   31 S: S1 . ';'

    ';'  shift, and go to state 72


State 44

   32 S: block_stmt .

    $default  reduce using rule 32 (S)


State 45

   33 S1: stmt . ',' S1
   34   | stmt .

    ','  shift, and go to state 73

    $default  reduce using rule 34 (S1)


State 46

   44 stmt: expr .
   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    T_AND                 shift, and go to state 74
    T_GREATER_THAN_EQUAL  shift, and go to state 75
    T_LESS_THAN_EQUAL     shift, and go to state 76
    T_EQUAL_TEST          shift, and go to state 77
    T_NOT_EQUAL           shift, and go to state 78
    T_OR                  shift, and go to state 79
    '>'                   shift, and go to state 80
    '<'                   shift, and go to state 81
    '+'                   shift, and go to state 82
    '-'                   shift, and go to state 83
    '*'                   shift, and go to state 84
    '/'                   shift, and go to state 85
    '%'                   shift, and go to state 86

    $default  reduce using rule 44 (stmt)


State 47

   53 expr: assign_stmt .

    $default  reduce using rule 53 (expr)


State 48

   65 expr: number .

    $default  reduce using rule 65 (expr)


State 49

   62 expr: identifier .
   66 assign_stmt: identifier . '=' expr

    '='  shift, and go to state 87

    $default  reduce using rule 62 (expr)


State 50

    4 decl: T_TYPEDEF type ID . ';'

    ';'  shift, and go to state 88


State 51

   19 func: ID '(' . args ')'
   20     | ID '(' . ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    ')'          shift, and go to state 89

    type   go to state 90
    basic  go to state 14
    args   go to state 91


State 52

   72 array: '[' . ID ']' array
   73      | '[' . ID ']'
   74      | '[' . T_DEC_INT ']'
   75      | '[' . T_DEC_INT ']' array

    T_DEC_INT  shift, and go to state 92
    ID         shift, and go to state 93


State 53

   71 identifier: ID array .

    $default  reduce using rule 71 (identifier)


State 54

   21 func: T_MAIN '(' . args ')'
   22     | T_MAIN '(' . ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    ')'          shift, and go to state 94

    type   go to state 90
    basic  go to state 14
    args   go to state 95


State 55

    5 decl: type func block .

    $default  reduce using rule 5 (decl)


State 56

    3 decl: type identifier ';' .

    $default  reduce using rule 3 (decl)


State 57

    6 decl: void func block .

    $default  reduce using rule 6 (decl)


State 58

   42 block_stmt: T_FOR '(' . S1 ';' S1 ';' S1 ')' block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    S1           go to state 96
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 59

   40 block_stmt: T_IF '(' . stmt ')' '{' M '}'
   41           | T_IF '(' . stmt ')' T_ELSE '{' M '}'

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    stmt         go to state 97
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 60

   43 block_stmt: T_WHILE '(' . S1 ')' block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    S1           go to state 98
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 61

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr
   61     | '(' expr . ')'

    T_AND                 shift, and go to state 74
    T_GREATER_THAN_EQUAL  shift, and go to state 75
    T_LESS_THAN_EQUAL     shift, and go to state 76
    T_EQUAL_TEST          shift, and go to state 77
    T_NOT_EQUAL           shift, and go to state 78
    T_OR                  shift, and go to state 79
    '>'                   shift, and go to state 80
    '<'                   shift, and go to state 81
    '+'                   shift, and go to state 82
    '-'                   shift, and go to state 83
    '*'                   shift, and go to state 84
    '/'                   shift, and go to state 85
    '%'                   shift, and go to state 86
    ')'                   shift, and go to state 99


State 62

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr
   63     | '+' expr .

    $default  reduce using rule 63 (expr)


State 63

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr
   64     | '-' expr .

    $default  reduce using rule 64 (expr)


State 64

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr
   60     | '!' expr .

    $default  reduce using rule 60 (expr)


State 65

   70 identifier: ID .
   71           | ID . array

    '['  shift, and go to state 52

    $default  reduce using rule 70 (identifier)

    array  go to state 53


State 66

   35 S1: type init .

    $default  reduce using rule 35 (S1)


State 67

   36 init: assign_stmt . ',' init
   38     | assign_stmt .

    ','  shift, and go to state 100

    $default  reduce using rule 38 (init)


State 68

   37 init: identifier . ',' init
   39     | identifier .
   66 assign_stmt: identifier . '=' expr

    ','  shift, and go to state 101
    '='  shift, and go to state 87

    $default  reduce using rule 39 (init)


State 69

   27 block: brac_open M . brac_close

    '}'  shift, and go to state 102

    brac_close  go to state 103


State 70

   29 M: S . M
   30  | S .

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    $default  reduce using rule 30 (M)

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    M            go to state 104
    S            go to state 70
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 71

    7 decl: T_STRUCT ID block ';' .

    $default  reduce using rule 7 (decl)


State 72

   31 S: S1 ';' .

    $default  reduce using rule 31 (S)


State 73

   33 S1: stmt ',' . S1

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    S1           go to state 105
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 74

   58 expr: expr T_AND . Marker_e expr

    $default  reduce using rule 67 (Marker_e)

    Marker_e  go to state 106


State 75

   51 expr: expr T_GREATER_THAN_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 107
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 76

   50 expr: expr T_LESS_THAN_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 108
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 77

   47 expr: expr T_EQUAL_TEST . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 109
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 78

   52 expr: expr T_NOT_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 110
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 79

   59 expr: expr T_OR . Marker_e expr

    $default  reduce using rule 67 (Marker_e)

    Marker_e  go to state 111


State 80

   49 expr: expr '>' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 112
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 81

   48 expr: expr '<' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 113
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 82

   45 expr: expr '+' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 114
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 83

   54 expr: expr '-' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 115
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 84

   55 expr: expr '*' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 116
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 85

   56 expr: expr '/' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 117
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 86

   57 expr: expr '%' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 118
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 87

   66 assign_stmt: identifier '=' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 119
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 88

    4 decl: T_TYPEDEF type ID ';' .

    $default  reduce using rule 4 (decl)


State 89

   20 func: ID '(' ')' .

    $default  reduce using rule 20 (func)


State 90

    9 type: type . '*'
   23 args: type . identifier ',' args
   24     | type . identifier

    ID   shift, and go to state 65
    '*'  shift, and go to state 22

    identifier  go to state 120


State 91

   19 func: ID '(' args . ')'

    ')'  shift, and go to state 121


State 92

   74 array: '[' T_DEC_INT . ']'
   75      | '[' T_DEC_INT . ']' array

    ']'  shift, and go to state 122


State 93

   72 array: '[' ID . ']' array
   73      | '[' ID . ']'

    ']'  shift, and go to state 123


State 94

   22 func: T_MAIN '(' ')' .

    $default  reduce using rule 22 (func)


State 95

   21 func: T_MAIN '(' args . ')'

    ')'  shift, and go to state 124


State 96

   42 block_stmt: T_FOR '(' S1 . ';' S1 ';' S1 ')' block

    ';'  shift, and go to state 125


State 97

   40 block_stmt: T_IF '(' stmt . ')' '{' M '}'
   41           | T_IF '(' stmt . ')' T_ELSE '{' M '}'

    ')'  shift, and go to state 126


State 98

   43 block_stmt: T_WHILE '(' S1 . ')' block

    ')'  shift, and go to state 127


State 99

   61 expr: '(' expr ')' .

    $default  reduce using rule 61 (expr)


State 100

   36 init: assign_stmt ',' . init

    ID  shift, and go to state 65

    init         go to state 128
    assign_stmt  go to state 67
    identifier   go to state 68


State 101

   37 init: identifier ',' . init

    ID  shift, and go to state 65

    init         go to state 129
    assign_stmt  go to state 67
    identifier   go to state 68


State 102

   26 brac_close: '}' .

    $default  reduce using rule 26 (brac_close)


State 103

   27 block: brac_open M brac_close .

    $default  reduce using rule 27 (block)


State 104

   29 M: S M .

    $default  reduce using rule 29 (M)


State 105

   33 S1: stmt ',' S1 .

    $default  reduce using rule 33 (S1)


State 106

   58 expr: expr T_AND Marker_e . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 130
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 107

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   51     | expr T_GREATER_THAN_EQUAL expr .
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    T_LESS_THAN_EQUAL  shift, and go to state 76
    '<'                shift, and go to state 81
    '+'                shift, and go to state 82
    '-'                shift, and go to state 83
    '*'                shift, and go to state 84
    '/'                shift, and go to state 85
    '%'                shift, and go to state 86

    $default  reduce using rule 51 (expr)


State 108

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   50     | expr T_LESS_THAN_EQUAL expr .
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 50 (expr)


State 109

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   47     | expr T_EQUAL_TEST expr .
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    T_GREATER_THAN_EQUAL  shift, and go to state 75
    T_LESS_THAN_EQUAL     shift, and go to state 76
    '>'                   shift, and go to state 80
    '<'                   shift, and go to state 81
    '+'                   shift, and go to state 82
    '-'                   shift, and go to state 83
    '*'                   shift, and go to state 84
    '/'                   shift, and go to state 85
    '%'                   shift, and go to state 86

    $default  reduce using rule 47 (expr)


State 110

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   52     | expr T_NOT_EQUAL expr .
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    T_GREATER_THAN_EQUAL  shift, and go to state 75
    T_LESS_THAN_EQUAL     shift, and go to state 76
    '>'                   shift, and go to state 80
    '<'                   shift, and go to state 81
    '+'                   shift, and go to state 82
    '-'                   shift, and go to state 83
    '*'                   shift, and go to state 84
    '/'                   shift, and go to state 85
    '%'                   shift, and go to state 86

    $default  reduce using rule 52 (expr)


State 111

   59 expr: expr T_OR Marker_e . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    func         go to state 39
    expr         go to state 131
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 112

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   49     | expr '>' expr .
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    T_LESS_THAN_EQUAL  shift, and go to state 76
    '<'                shift, and go to state 81
    '+'                shift, and go to state 82
    '-'                shift, and go to state 83
    '*'                shift, and go to state 84
    '/'                shift, and go to state 85
    '%'                shift, and go to state 86

    $default  reduce using rule 49 (expr)


State 113

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   48     | expr '<' expr .
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 48 (expr)


State 114

   45 expr: expr . '+' expr
   45     | expr '+' expr .
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 45 (expr)


State 115

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   54     | expr '-' expr .
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 54 (expr)


State 116

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   55     | expr '*' expr .
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    $default  reduce using rule 55 (expr)


State 117

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   56     | expr '/' expr .
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    $default  reduce using rule 56 (expr)


State 118

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   57     | expr '%' expr .
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr

    $default  reduce using rule 57 (expr)


State 119

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr
   66 assign_stmt: identifier '=' expr .

    T_AND                 shift, and go to state 74
    T_GREATER_THAN_EQUAL  shift, and go to state 75
    T_LESS_THAN_EQUAL     shift, and go to state 76
    T_EQUAL_TEST          shift, and go to state 77
    T_NOT_EQUAL           shift, and go to state 78
    T_OR                  shift, and go to state 79
    '>'                   shift, and go to state 80
    '<'                   shift, and go to state 81
    '+'                   shift, and go to state 82
    '-'                   shift, and go to state 83
    '*'                   shift, and go to state 84
    '/'                   shift, and go to state 85
    '%'                   shift, and go to state 86

    $default  reduce using rule 66 (assign_stmt)


State 120

   23 args: type identifier . ',' args
   24     | type identifier .

    ','  shift, and go to state 132

    $default  reduce using rule 24 (args)


State 121

   19 func: ID '(' args ')' .

    $default  reduce using rule 19 (func)


State 122

   74 array: '[' T_DEC_INT ']' .
   75      | '[' T_DEC_INT ']' . array

    '['  shift, and go to state 52

    $default  reduce using rule 74 (array)

    array  go to state 133


State 123

   72 array: '[' ID ']' . array
   73      | '[' ID ']' .

    '['  shift, and go to state 52

    $default  reduce using rule 73 (array)

    array  go to state 134


State 124

   21 func: T_MAIN '(' args ')' .

    $default  reduce using rule 21 (func)


State 125

   42 block_stmt: T_FOR '(' S1 ';' . S1 ';' S1 ')' block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    S1           go to state 135
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 126

   40 block_stmt: T_IF '(' stmt ')' . '{' M '}'
   41           | T_IF '(' stmt ')' . T_ELSE '{' M '}'

    T_ELSE  shift, and go to state 136
    '{'     shift, and go to state 137


State 127

   43 block_stmt: T_WHILE '(' S1 ')' . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '{'          shift, and go to state 33
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    brac_open    go to state 40
    block        go to state 138
    S            go to state 42
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 128

   36 init: assign_stmt ',' init .

    $default  reduce using rule 36 (init)


State 129

   37 init: identifier ',' init .

    $default  reduce using rule 37 (init)


State 130

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   58     | expr T_AND Marker_e expr .
   59     | expr . T_OR Marker_e expr

    T_GREATER_THAN_EQUAL  shift, and go to state 75
    T_LESS_THAN_EQUAL     shift, and go to state 76
    T_EQUAL_TEST          shift, and go to state 77
    T_NOT_EQUAL           shift, and go to state 78
    '>'                   shift, and go to state 80
    '<'                   shift, and go to state 81
    '+'                   shift, and go to state 82
    '-'                   shift, and go to state 83
    '*'                   shift, and go to state 84
    '/'                   shift, and go to state 85
    '%'                   shift, and go to state 86

    $default  reduce using rule 58 (expr)


State 131

   45 expr: expr . '+' expr
   47     | expr . T_EQUAL_TEST expr
   48     | expr . '<' expr
   49     | expr . '>' expr
   50     | expr . T_LESS_THAN_EQUAL expr
   51     | expr . T_GREATER_THAN_EQUAL expr
   52     | expr . T_NOT_EQUAL expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '%' expr
   58     | expr . T_AND Marker_e expr
   59     | expr . T_OR Marker_e expr
   59     | expr T_OR Marker_e expr .

    T_AND                 shift, and go to state 74
    T_GREATER_THAN_EQUAL  shift, and go to state 75
    T_LESS_THAN_EQUAL     shift, and go to state 76
    T_EQUAL_TEST          shift, and go to state 77
    T_NOT_EQUAL           shift, and go to state 78
    '>'                   shift, and go to state 80
    '<'                   shift, and go to state 81
    '+'                   shift, and go to state 82
    '-'                   shift, and go to state 83
    '*'                   shift, and go to state 84
    '/'                   shift, and go to state 85
    '%'                   shift, and go to state 86

    $default  reduce using rule 59 (expr)


State 132

   23 args: type identifier ',' . args

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 90
    basic  go to state 14
    args   go to state 139


State 133

   75 array: '[' T_DEC_INT ']' array .

    $default  reduce using rule 75 (array)


State 134

   72 array: '[' ID ']' array .

    $default  reduce using rule 72 (array)


State 135

   42 block_stmt: T_FOR '(' S1 ';' S1 . ';' S1 ')' block

    ';'  shift, and go to state 140


State 136

   41 block_stmt: T_IF '(' stmt ')' T_ELSE . '{' M '}'

    '{'  shift, and go to state 141


State 137

   40 block_stmt: T_IF '(' stmt ')' '{' . M '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    M            go to state 142
    S            go to state 70
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 138

   43 block_stmt: T_WHILE '(' S1 ')' block .

    $default  reduce using rule 43 (block_stmt)


State 139

   23 args: type identifier ',' args .

    $default  reduce using rule 23 (args)


State 140

   42 block_stmt: T_FOR '(' S1 ';' S1 ';' . S1 ')' block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    S1           go to state 143
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 141

   41 block_stmt: T_IF '(' stmt ')' T_ELSE '{' . M '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    M            go to state 144
    S            go to state 70
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 142

   40 block_stmt: T_IF '(' stmt ')' '{' M . '}'

    '}'  shift, and go to state 145


State 143

   42 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 . ')' block

    ')'  shift, and go to state 146


State 144

   41 block_stmt: T_IF '(' stmt ')' T_ELSE '{' M . '}'

    '}'  shift, and go to state 147


State 145

   40 block_stmt: T_IF '(' stmt ')' '{' M '}' .

    $default  reduce using rule 40 (block_stmt)


State 146

   42 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 ')' . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '{'          shift, and go to state 33
    '('          shift, and go to state 34
    '+'          shift, and go to state 35
    '-'          shift, and go to state 36
    '!'          shift, and go to state 37

    type         go to state 38
    basic        go to state 14
    func         go to state 39
    brac_open    go to state 40
    block        go to state 148
    S            go to state 42
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48
    identifier   go to state 49


State 147

   41 block_stmt: T_IF '(' stmt ')' T_ELSE '{' M '}' .

    $default  reduce using rule 41 (block_stmt)


State 148

   42 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 ')' block .

    $default  reduce using rule 42 (block_stmt)
