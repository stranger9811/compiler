Terminals unused in grammar

   T_BREAK
   T_CONTINUE
   T_GOTO
   T_RETURN
   T_PRINTF
   T_SCANF
   T_SIZEOF
   T_UNSIGNED
   T_SIGNED
   T_CONST
   T_SHORT
   T_EXTERN
   T_LONG
   T_APOS
   T_STRING
   T_AND
   T_GREATER_THAN_EQUAL
   T_LESS_THAN_EQUAL
   T_EQUAL_TEST
   T_NOT_EQUAL
   T_PLUS_SELF
   T_MINUS_SELF
   T_MULT_SELF
   T_DIVIDE_SELF
   T_THIS_POINTER
   T_ADD_ONE
   T_SUB_ONE
   T_IO_INT
   T_IO_LONG_LONG
   T_IO_STRING
   T_IO_FLOAT
   '|'
   '^'
   '&'
   '>'
   '<'
   '/'
   '%'
   '.'


Grammar

    0 $accept: code $end

    1 code: decl code
    2     | decl

    3 decl: type identifier ';'
    4     | T_TYPEDEF type ID ';'
    5     | type func block
    6     | void func block
    7     | T_STRUCT ID block ';'
    8     | T_HEADER

    9 type: type '*'
   10     | basic

   11 basic: T_LONG_LONG
   12      | T_INT
   13      | T_CHAR
   14      | T_FLOAT
   15      | T_DOUBLE
   16      | T_BOOL

   17 void: void '*'
   18     | T_VOID

   19 func: ID '(' args ')'
   20     | ID '(' ')'
   21     | T_MAIN '(' args ')'
   22     | T_MAIN '(' ')'

   23 args: type identifier ',' args
   24     | type identifier

   25 brac_open: '{'

   26 brac_close: '}'

   27 block: brac_open M brac_close
   28      | S

   29 M: S M
   30  | S

   31 S: S1 ';'
   32  | block_stmt

   33 S1: stmt ',' S1
   34   | stmt
   35   | type init

   36 init: assign_stmt ',' init
   37     | identifier ',' init
   38     | assign_stmt
   39     | identifier

   40 block_stmt: T_IF '(' stmt ')' '{' M '}'
   41           | T_IF '(' stmt ')' '{' T_ELSE '}'
   42           | T_FOR '(' S1 ';' S1 ';' S1 ')' block
   43           | T_WHILE '(' S1 ')' block

   44 stmt: expr

   45 expr: expr '+' expr
   46     | assign_stmt
   47     | expr T_OR expr
   48     | '!' expr
   49     | '(' expr ')'
   50     | ID
   51     | '+' expr
   52     | '-' expr
   53     | number

   54 assign_stmt: ID '=' expr

   55 number: T_DEC_INT
   56       | T_DEC_FLOAT

   57 identifier: ID
   58           | ID array

   59 array: '[' ID ']' array
   60      | '[' ID ']'
   61      | '[' T_DEC_INT ']'
   62      | '[' T_DEC_INT ']' array


Terminals, with rules where they appear

$end (0) 0
'!' (33) 48
'%' (37)
'&' (38)
'(' (40) 19 20 21 22 40 41 42 43 49
')' (41) 19 20 21 22 40 41 42 43 49
'*' (42) 9 17
'+' (43) 45 51
',' (44) 23 33 36 37
'-' (45) 52
'.' (46)
'/' (47)
';' (59) 3 4 7 31 42
'<' (60)
'=' (61) 54
'>' (62)
'[' (91) 59 60 61 62
']' (93) 59 60 61 62
'^' (94)
'{' (123) 25 40 41
'|' (124)
'}' (125) 26 40 41
error (256)
T_STRUCT (258) 7
T_BREAK (259)
T_CONTINUE (260)
T_TYPEDEF (261) 4
T_CHAR (262) 13
T_DOUBLE (263) 15
T_INT (264) 12
T_FLOAT (265) 14
T_LONG_LONG (266) 11
T_FOR (267) 42
T_IF (268) 40 41
T_ELSE (269) 41
T_WHILE (270) 43
T_GOTO (271)
T_RETURN (272)
T_PRINTF (273)
T_VOID (274) 18
T_SCANF (275)
T_SIZEOF (276)
T_UNSIGNED (277)
T_SIGNED (278)
T_CONST (279)
T_SHORT (280)
T_EXTERN (281)
T_LONG (282)
T_BOOL (283) 16
T_APOS (284)
T_DEC_FLOAT (285) 56
T_DEC_INT (286) 55 61 62
T_STRING (287)
T_HEADER (288) 8
ID (289) 4 7 19 20 50 54 57 58 59 60
T_MAIN (290) 21 22
T_AND (291)
T_GREATER_THAN_EQUAL (292)
T_LESS_THAN_EQUAL (293)
T_EQUAL_TEST (294)
T_NOT_EQUAL (295)
T_OR (296) 47
T_PLUS_SELF (297)
T_MINUS_SELF (298)
T_MULT_SELF (299)
T_DIVIDE_SELF (300)
T_THIS_POINTER (301)
T_ADD_ONE (302)
T_SUB_ONE (303)
T_IO_INT (304)
T_IO_LONG_LONG (305)
T_IO_STRING (306)
T_IO_FLOAT (307)
DEREF (308)
UMINUS (309)
UPLUS (310)


Nonterminals, with rules where they appear

$accept (77)
    on left: 0
code (78)
    on left: 1 2, on right: 0 1
decl (79)
    on left: 3 4 5 6 7 8, on right: 1 2
type (80)
    on left: 9 10, on right: 3 4 5 9 23 24 35
basic (81)
    on left: 11 12 13 14 15 16, on right: 10
void (82)
    on left: 17 18, on right: 6 17
func (83)
    on left: 19 20 21 22, on right: 5 6
args (84)
    on left: 23 24, on right: 19 21 23
brac_open (85)
    on left: 25, on right: 27
brac_close (86)
    on left: 26, on right: 27
block (87)
    on left: 27 28, on right: 5 6 7 42 43
M (88)
    on left: 29 30, on right: 27 29 40
S (89)
    on left: 31 32, on right: 28 29 30
S1 (90)
    on left: 33 34 35, on right: 31 33 42 43
init (91)
    on left: 36 37 38 39, on right: 35 36 37
block_stmt (92)
    on left: 40 41 42 43, on right: 32
stmt (93)
    on left: 44, on right: 33 34 40 41
expr (94)
    on left: 45 46 47 48 49 50 51 52 53, on right: 44 45 47 48 49 51
    52 54
assign_stmt (95)
    on left: 54, on right: 36 38 46
number (96)
    on left: 55 56, on right: 53
identifier (97)
    on left: 57 58, on right: 3 23 24 37 39
array (98)
    on left: 59 60 61 62, on right: 58 59 62


State 0

    0 $accept: . code $end

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    code   go to state 11
    decl   go to state 12
    type   go to state 13
    basic  go to state 14
    void   go to state 15


State 1

    7 decl: T_STRUCT . ID block ';'

    ID  shift, and go to state 16


State 2

    4 decl: T_TYPEDEF . type ID ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 17
    basic  go to state 14


State 3

   13 basic: T_CHAR .

    $default  reduce using rule 13 (basic)


State 4

   15 basic: T_DOUBLE .

    $default  reduce using rule 15 (basic)


State 5

   12 basic: T_INT .

    $default  reduce using rule 12 (basic)


State 6

   14 basic: T_FLOAT .

    $default  reduce using rule 14 (basic)


State 7

   11 basic: T_LONG_LONG .

    $default  reduce using rule 11 (basic)


State 8

   18 void: T_VOID .

    $default  reduce using rule 18 (void)


State 9

   16 basic: T_BOOL .

    $default  reduce using rule 16 (basic)


State 10

    8 decl: T_HEADER .

    $default  reduce using rule 8 (decl)


State 11

    0 $accept: code . $end

    $end  shift, and go to state 18


State 12

    1 code: decl . code
    2     | decl .

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    $default  reduce using rule 2 (code)

    code   go to state 19
    decl   go to state 12
    type   go to state 13
    basic  go to state 14
    void   go to state 15


State 13

    3 decl: type . identifier ';'
    5     | type . func block
    9 type: type . '*'

    ID      shift, and go to state 20
    T_MAIN  shift, and go to state 21
    '*'     shift, and go to state 22

    func        go to state 23
    identifier  go to state 24


State 14

   10 type: basic .

    $default  reduce using rule 10 (type)


State 15

    6 decl: void . func block
   17 void: void . '*'

    ID      shift, and go to state 25
    T_MAIN  shift, and go to state 21
    '*'     shift, and go to state 26

    func  go to state 27


State 16

    7 decl: T_STRUCT ID . block ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '{'          shift, and go to state 34
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    brac_open    go to state 40
    block        go to state 41
    S            go to state 42
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 17

    4 decl: T_TYPEDEF type . ID ';'
    9 type: type . '*'

    ID   shift, and go to state 49
    '*'  shift, and go to state 22


State 18

    0 $accept: code $end .

    $default  accept


State 19

    1 code: decl code .

    $default  reduce using rule 1 (code)


State 20

   19 func: ID . '(' args ')'
   20     | ID . '(' ')'
   57 identifier: ID .
   58           | ID . array

    '('  shift, and go to state 50
    '['  shift, and go to state 51

    $default  reduce using rule 57 (identifier)

    array  go to state 52


State 21

   21 func: T_MAIN . '(' args ')'
   22     | T_MAIN . '(' ')'

    '('  shift, and go to state 53


State 22

    9 type: type '*' .

    $default  reduce using rule 9 (type)


State 23

    5 decl: type func . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '{'          shift, and go to state 34
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    brac_open    go to state 40
    block        go to state 54
    S            go to state 42
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 24

    3 decl: type identifier . ';'

    ';'  shift, and go to state 55


State 25

   19 func: ID . '(' args ')'
   20     | ID . '(' ')'

    '('  shift, and go to state 50


State 26

   17 void: void '*' .

    $default  reduce using rule 17 (void)


State 27

    6 decl: void func . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '{'          shift, and go to state 34
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    brac_open    go to state 40
    block        go to state 56
    S            go to state 42
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 28

   42 block_stmt: T_FOR . '(' S1 ';' S1 ';' S1 ')' block

    '('  shift, and go to state 57


State 29

   40 block_stmt: T_IF . '(' stmt ')' '{' M '}'
   41           | T_IF . '(' stmt ')' '{' T_ELSE '}'

    '('  shift, and go to state 58


State 30

   43 block_stmt: T_WHILE . '(' S1 ')' block

    '('  shift, and go to state 59


State 31

   56 number: T_DEC_FLOAT .

    $default  reduce using rule 56 (number)


State 32

   55 number: T_DEC_INT .

    $default  reduce using rule 55 (number)


State 33

   50 expr: ID .
   54 assign_stmt: ID . '=' expr

    '='  shift, and go to state 60

    $default  reduce using rule 50 (expr)


State 34

   25 brac_open: '{' .

    $default  reduce using rule 25 (brac_open)


State 35

   49 expr: '(' . expr ')'

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    expr         go to state 61
    assign_stmt  go to state 47
    number       go to state 48


State 36

   51 expr: '+' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    expr         go to state 62
    assign_stmt  go to state 47
    number       go to state 48


State 37

   52 expr: '-' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    expr         go to state 63
    assign_stmt  go to state 47
    number       go to state 48


State 38

   48 expr: '!' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    expr         go to state 64
    assign_stmt  go to state 47
    number       go to state 48


State 39

    9 type: type . '*'
   35 S1: type . init

    ID   shift, and go to state 65
    '*'  shift, and go to state 22

    init         go to state 66
    assign_stmt  go to state 67
    identifier   go to state 68


State 40

   27 block: brac_open . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    M            go to state 69
    S            go to state 70
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 41

    7 decl: T_STRUCT ID block . ';'

    ';'  shift, and go to state 71


State 42

   28 block: S .

    $default  reduce using rule 28 (block)


State 43

   31 S: S1 . ';'

    ';'  shift, and go to state 72


State 44

   32 S: block_stmt .

    $default  reduce using rule 32 (S)


State 45

   33 S1: stmt . ',' S1
   34   | stmt .

    ','  shift, and go to state 73

    $default  reduce using rule 34 (S1)


State 46

   44 stmt: expr .
   45 expr: expr . '+' expr
   47     | expr . T_OR expr

    T_OR  shift, and go to state 74
    '+'   shift, and go to state 75

    $default  reduce using rule 44 (stmt)


State 47

   46 expr: assign_stmt .

    $default  reduce using rule 46 (expr)


State 48

   53 expr: number .

    $default  reduce using rule 53 (expr)


State 49

    4 decl: T_TYPEDEF type ID . ';'

    ';'  shift, and go to state 76


State 50

   19 func: ID '(' . args ')'
   20     | ID '(' . ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    ')'          shift, and go to state 77

    type   go to state 78
    basic  go to state 14
    args   go to state 79


State 51

   59 array: '[' . ID ']' array
   60      | '[' . ID ']'
   61      | '[' . T_DEC_INT ']'
   62      | '[' . T_DEC_INT ']' array

    T_DEC_INT  shift, and go to state 80
    ID         shift, and go to state 81


State 52

   58 identifier: ID array .

    $default  reduce using rule 58 (identifier)


State 53

   21 func: T_MAIN '(' . args ')'
   22     | T_MAIN '(' . ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    ')'          shift, and go to state 82

    type   go to state 78
    basic  go to state 14
    args   go to state 83


State 54

    5 decl: type func block .

    $default  reduce using rule 5 (decl)


State 55

    3 decl: type identifier ';' .

    $default  reduce using rule 3 (decl)


State 56

    6 decl: void func block .

    $default  reduce using rule 6 (decl)


State 57

   42 block_stmt: T_FOR '(' . S1 ';' S1 ';' S1 ')' block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    S1           go to state 84
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 58

   40 block_stmt: T_IF '(' . stmt ')' '{' M '}'
   41           | T_IF '(' . stmt ')' '{' T_ELSE '}'

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    stmt         go to state 85
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 59

   43 block_stmt: T_WHILE '(' . S1 ')' block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    S1           go to state 86
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 60

   54 assign_stmt: ID '=' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    expr         go to state 87
    assign_stmt  go to state 47
    number       go to state 48


State 61

   45 expr: expr . '+' expr
   47     | expr . T_OR expr
   49     | '(' expr . ')'

    T_OR  shift, and go to state 74
    '+'   shift, and go to state 75
    ')'   shift, and go to state 88


State 62

   45 expr: expr . '+' expr
   47     | expr . T_OR expr
   51     | '+' expr .

    $default  reduce using rule 51 (expr)


State 63

   45 expr: expr . '+' expr
   47     | expr . T_OR expr
   52     | '-' expr .

    $default  reduce using rule 52 (expr)


State 64

   45 expr: expr . '+' expr
   47     | expr . T_OR expr
   48     | '!' expr .

    $default  reduce using rule 48 (expr)


State 65

   54 assign_stmt: ID . '=' expr
   57 identifier: ID .
   58           | ID . array

    '['  shift, and go to state 51
    '='  shift, and go to state 60

    $default  reduce using rule 57 (identifier)

    array  go to state 52


State 66

   35 S1: type init .

    $default  reduce using rule 35 (S1)


State 67

   36 init: assign_stmt . ',' init
   38     | assign_stmt .

    ','  shift, and go to state 89

    $default  reduce using rule 38 (init)


State 68

   37 init: identifier . ',' init
   39     | identifier .

    ','  shift, and go to state 90

    $default  reduce using rule 39 (init)


State 69

   27 block: brac_open M . brac_close

    '}'  shift, and go to state 91

    brac_close  go to state 92


State 70

   29 M: S . M
   30  | S .

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    $default  reduce using rule 30 (M)

    type         go to state 39
    basic        go to state 14
    M            go to state 93
    S            go to state 70
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 71

    7 decl: T_STRUCT ID block ';' .

    $default  reduce using rule 7 (decl)


State 72

   31 S: S1 ';' .

    $default  reduce using rule 31 (S)


State 73

   33 S1: stmt ',' . S1

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    S1           go to state 94
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 74

   47 expr: expr T_OR . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    expr         go to state 95
    assign_stmt  go to state 47
    number       go to state 48


State 75

   45 expr: expr '+' . expr

    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    expr         go to state 96
    assign_stmt  go to state 47
    number       go to state 48


State 76

    4 decl: T_TYPEDEF type ID ';' .

    $default  reduce using rule 4 (decl)


State 77

   20 func: ID '(' ')' .

    $default  reduce using rule 20 (func)


State 78

    9 type: type . '*'
   23 args: type . identifier ',' args
   24     | type . identifier

    ID   shift, and go to state 97
    '*'  shift, and go to state 22

    identifier  go to state 98


State 79

   19 func: ID '(' args . ')'

    ')'  shift, and go to state 99


State 80

   61 array: '[' T_DEC_INT . ']'
   62      | '[' T_DEC_INT . ']' array

    ']'  shift, and go to state 100


State 81

   59 array: '[' ID . ']' array
   60      | '[' ID . ']'

    ']'  shift, and go to state 101


State 82

   22 func: T_MAIN '(' ')' .

    $default  reduce using rule 22 (func)


State 83

   21 func: T_MAIN '(' args . ')'

    ')'  shift, and go to state 102


State 84

   42 block_stmt: T_FOR '(' S1 . ';' S1 ';' S1 ')' block

    ';'  shift, and go to state 103


State 85

   40 block_stmt: T_IF '(' stmt . ')' '{' M '}'
   41           | T_IF '(' stmt . ')' '{' T_ELSE '}'

    ')'  shift, and go to state 104


State 86

   43 block_stmt: T_WHILE '(' S1 . ')' block

    ')'  shift, and go to state 105


State 87

   45 expr: expr . '+' expr
   47     | expr . T_OR expr
   54 assign_stmt: ID '=' expr .

    T_OR  shift, and go to state 74
    '+'   shift, and go to state 75

    $default  reduce using rule 54 (assign_stmt)


State 88

   49 expr: '(' expr ')' .

    $default  reduce using rule 49 (expr)


State 89

   36 init: assign_stmt ',' . init

    ID  shift, and go to state 65

    init         go to state 106
    assign_stmt  go to state 67
    identifier   go to state 68


State 90

   37 init: identifier ',' . init

    ID  shift, and go to state 65

    init         go to state 107
    assign_stmt  go to state 67
    identifier   go to state 68


State 91

   26 brac_close: '}' .

    $default  reduce using rule 26 (brac_close)


State 92

   27 block: brac_open M brac_close .

    $default  reduce using rule 27 (block)


State 93

   29 M: S M .

    $default  reduce using rule 29 (M)


State 94

   33 S1: stmt ',' S1 .

    $default  reduce using rule 33 (S1)


State 95

   45 expr: expr . '+' expr
   47     | expr . T_OR expr
   47     | expr T_OR expr .

    '+'  shift, and go to state 75

    $default  reduce using rule 47 (expr)


State 96

   45 expr: expr . '+' expr
   45     | expr '+' expr .
   47     | expr . T_OR expr

    $default  reduce using rule 45 (expr)


State 97

   57 identifier: ID .
   58           | ID . array

    '['  shift, and go to state 51

    $default  reduce using rule 57 (identifier)

    array  go to state 52


State 98

   23 args: type identifier . ',' args
   24     | type identifier .

    ','  shift, and go to state 108

    $default  reduce using rule 24 (args)


State 99

   19 func: ID '(' args ')' .

    $default  reduce using rule 19 (func)


State 100

   61 array: '[' T_DEC_INT ']' .
   62      | '[' T_DEC_INT ']' . array

    '['  shift, and go to state 51

    $default  reduce using rule 61 (array)

    array  go to state 109


State 101

   59 array: '[' ID ']' . array
   60      | '[' ID ']' .

    '['  shift, and go to state 51

    $default  reduce using rule 60 (array)

    array  go to state 110


State 102

   21 func: T_MAIN '(' args ')' .

    $default  reduce using rule 21 (func)


State 103

   42 block_stmt: T_FOR '(' S1 ';' . S1 ';' S1 ')' block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    S1           go to state 111
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 104

   40 block_stmt: T_IF '(' stmt ')' . '{' M '}'
   41           | T_IF '(' stmt ')' . '{' T_ELSE '}'

    '{'  shift, and go to state 112


State 105

   43 block_stmt: T_WHILE '(' S1 ')' . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '{'          shift, and go to state 34
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    brac_open    go to state 40
    block        go to state 113
    S            go to state 42
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 106

   36 init: assign_stmt ',' init .

    $default  reduce using rule 36 (init)


State 107

   37 init: identifier ',' init .

    $default  reduce using rule 37 (init)


State 108

   23 args: type identifier ',' . args

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 78
    basic  go to state 14
    args   go to state 114


State 109

   62 array: '[' T_DEC_INT ']' array .

    $default  reduce using rule 62 (array)


State 110

   59 array: '[' ID ']' array .

    $default  reduce using rule 59 (array)


State 111

   42 block_stmt: T_FOR '(' S1 ';' S1 . ';' S1 ')' block

    ';'  shift, and go to state 115


State 112

   40 block_stmt: T_IF '(' stmt ')' '{' . M '}'
   41           | T_IF '(' stmt ')' '{' . T_ELSE '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_ELSE       shift, and go to state 116
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    M            go to state 117
    S            go to state 70
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 113

   43 block_stmt: T_WHILE '(' S1 ')' block .

    $default  reduce using rule 43 (block_stmt)


State 114

   23 args: type identifier ',' args .

    $default  reduce using rule 23 (args)


State 115

   42 block_stmt: T_FOR '(' S1 ';' S1 ';' . S1 ')' block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    S1           go to state 118
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 116

   41 block_stmt: T_IF '(' stmt ')' '{' T_ELSE . '}'

    '}'  shift, and go to state 119


State 117

   40 block_stmt: T_IF '(' stmt ')' '{' M . '}'

    '}'  shift, and go to state 120


State 118

   42 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 . ')' block

    ')'  shift, and go to state 121


State 119

   41 block_stmt: T_IF '(' stmt ')' '{' T_ELSE '}' .

    $default  reduce using rule 41 (block_stmt)


State 120

   40 block_stmt: T_IF '(' stmt ')' '{' M '}' .

    $default  reduce using rule 40 (block_stmt)


State 121

   42 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 ')' . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 31
    T_DEC_INT    shift, and go to state 32
    ID           shift, and go to state 33
    '{'          shift, and go to state 34
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '!'          shift, and go to state 38

    type         go to state 39
    basic        go to state 14
    brac_open    go to state 40
    block        go to state 122
    S            go to state 42
    S1           go to state 43
    block_stmt   go to state 44
    stmt         go to state 45
    expr         go to state 46
    assign_stmt  go to state 47
    number       go to state 48


State 122

   42 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 ')' block .

    $default  reduce using rule 42 (block_stmt)
