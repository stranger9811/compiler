Terminals unused in grammar

   T_BREAK
   T_CONTINUE
   T_GOTO
   T_SCANF
   T_SIZEOF
   T_UNSIGNED
   T_SIGNED
   T_CONST
   T_SHORT
   T_EXTERN
   T_LONG
   T_APOS
   T_STRING
   T_IO_INT
   T_IO_LONG_LONG
   T_IO_STRING
   T_IO_FLOAT
   T_MULT_SELF
   T_DIVIDE_SELF
   T_PLUS_SELF
   T_MINUS_SELF
   '|'
   '^'
   '&'
   T_ADD_ONE
   T_SUB_ONE
   T_THIS_POINTER
   '.'


Grammar

    0 $accept: code1 $end

    1 Marker_If: epsilon

    2 Marker_Else: epsilon

    3 Marker_For: epsilon

    4 epsilon: %empty

    5 code1: code

    6 code: decl Marker_If code
    7     | decl

    8 decl: type identifier ';'
    9     | T_TYPEDEF type ID ';'

   10 $@1: %empty

   11 decl: type func $@1 block

   12 $@2: %empty

   13 decl: void func $@2 block
   14     | T_STRUCT ID block ';'
   15     | T_HEADER

   16 type: type '*'
   17     | basic

   18 basic: T_LONG_LONG
   19      | T_INT
   20      | T_CHAR
   21      | T_FLOAT
   22      | T_DOUBLE
   23      | T_BOOL

   24 void: void '*'
   25     | T_VOID

   26 func: ID '(' args ')'
   27     | ID '(' ')'
   28     | T_MAIN '(' args ')'
   29     | T_MAIN '(' ')'

   30 args: args ',' type identifier
   31     | type identifier

   32 brac_open: '{'

   33 brac_close: '}'

   34 block: brac_open M brac_close
   35      | S

   36 M: M Marker_If S
   37  | S

   38 S: S1 ';'
   39  | block_stmt
   40  | ';'

   41 exprlist: exprlist ',' expr
   42         | expr
   43         | epsilon

   44 S1: expr ',' Marker_If S1
   45   | expr

   46 $@3: %empty

   47 S1: type $@3 init
   48   | T_RETURN expr
   49   | T_RETURN
   50   | T_PRINT_INT expr

   51 init: assign_stmt ',' init
   52     | identifier ',' init
   53     | assign_stmt
   54     | identifier

   55 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close
   56           | T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

   57 $@4: %empty

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If $@4 M brac_close

   59 $@5: %empty

   60 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If $@5 M brac_close

   61 expr: expr '+' expr
   62     | ID '(' exprlist ')'
   63     | expr T_EQUAL_TEST expr
   64     | expr '<' expr
   65     | expr '>' expr
   66     | expr T_LESS_THAN_EQUAL expr
   67     | expr T_GREATER_THAN_EQUAL expr
   68     | expr T_NOT_EQUAL expr
   69     | assign_stmt
   70     | expr '-' expr
   71     | expr '*' expr
   72     | expr '/' expr
   73     | expr '%' expr
   74     | expr T_AND Marker_If expr
   75     | expr T_OR Marker_If expr
   76     | '!' expr
   77     | '(' expr ')'
   78     | identifier
   79     | '+' expr
   80     | '-' expr
   81     | number
   82     | '*' expr
   83     | "true"
   84     | "false"

   85 assign_stmt: identifier '=' expr

   86 number: T_DEC_INT
   87       | T_DEC_FLOAT

   88 identifier: ID
   89           | ID array

   90 array: '[' ID ']' array
   91      | '[' ID ']'
   92      | '[' T_DEC_INT ']'
   93      | '[' T_DEC_INT ']' array


Terminals, with rules where they appear

$end (0) 0
'!' (33) 76
'%' (37) 73
'&' (38)
'(' (40) 26 27 28 29 55 56 58 60 62 77
')' (41) 26 27 28 29 55 56 58 60 62 77
'*' (42) 16 24 71 82
'+' (43) 61 79
',' (44) 30 41 44 51 52
'-' (45) 70 80
'.' (46)
'/' (47) 72
';' (59) 8 9 14 38 40 58
'<' (60) 64
'=' (61) 85
'>' (62) 65
'[' (91) 90 91 92 93
']' (93) 90 91 92 93
'^' (94)
'{' (123) 32
'|' (124)
'}' (125) 33
error (256)
T_STRUCT (258) 14
T_BREAK (259)
T_CONTINUE (260)
T_TYPEDEF (261) 9
T_CHAR (262) 20
T_DOUBLE (263) 22
T_INT (264) 19
T_FLOAT (265) 21
T_LONG_LONG (266) 18
T_FOR (267) 58
T_IF (268) 55 56
T_ELSE (269) 56
T_WHILE (270) 60
T_GOTO (271)
T_RETURN (272) 48 49
T_PRINT_INT (273) 50
T_VOID (274) 25
T_SCANF (275)
T_SIZEOF (276)
T_UNSIGNED (277)
T_SIGNED (278)
T_CONST (279)
T_SHORT (280)
T_EXTERN (281)
T_LONG (282)
T_BOOL (283) 23
T_APOS (284)
T_DEC_FLOAT (285) 87
T_DEC_INT (286) 86 92 93
T_STRING (287)
T_HEADER (288) 15
ID (289) 9 14 26 27 62 88 89 90 91
T_MAIN (290) 28 29
T_IO_INT (291)
T_IO_LONG_LONG (292)
T_IO_STRING (293)
T_IO_FLOAT (294)
T_MULT_SELF (295)
T_DIVIDE_SELF (296)
T_PLUS_SELF (297)
T_MINUS_SELF (298)
T_OR (299) 75
T_AND (300) 74
T_EQUAL_TEST (301) 63
T_NOT_EQUAL (302) 68
T_GREATER_THAN_EQUAL (303) 67
T_LESS_THAN_EQUAL (304) 66
DEREF (305)
UPLUS (306)
UMINUS (307)
T_ADD_ONE (308)
T_SUB_ONE (309)
T_THIS_POINTER (310)
"true" (311) 83
"false" (312) 84


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
Marker_If (80)
    on left: 1, on right: 6 36 44 55 56 58 60 74 75
Marker_Else (81)
    on left: 2, on right: 56
Marker_For (82)
    on left: 3, on right: 58
epsilon (83)
    on left: 4, on right: 1 2 3 43
code1 (84)
    on left: 5, on right: 0
code (85)
    on left: 6 7, on right: 5 6
decl (86)
    on left: 8 9 11 13 14 15, on right: 6 7
$@1 (87)
    on left: 10, on right: 11
$@2 (88)
    on left: 12, on right: 13
type (89)
    on left: 16 17, on right: 8 9 11 16 30 31 47
basic (90)
    on left: 18 19 20 21 22 23, on right: 17
void (91)
    on left: 24 25, on right: 13 24
func (92)
    on left: 26 27 28 29, on right: 11 13
args (93)
    on left: 30 31, on right: 26 28 30
brac_open (94)
    on left: 32, on right: 34 55 56 58 60
brac_close (95)
    on left: 33, on right: 34 55 56 58 60
block (96)
    on left: 34 35, on right: 11 13 14
M (97)
    on left: 36 37, on right: 34 36 55 56 58 60
S (98)
    on left: 38 39 40, on right: 35 36 37
exprlist (99)
    on left: 41 42 43, on right: 41 62
S1 (100)
    on left: 44 45 47 48 49 50, on right: 38 44 58 60
$@3 (101)
    on left: 46, on right: 47
init (102)
    on left: 51 52 53 54, on right: 47 51 52
block_stmt (103)
    on left: 55 56 58 60, on right: 39
$@4 (104)
    on left: 57, on right: 58
$@5 (105)
    on left: 59, on right: 60
expr (106)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79 80 81 82 83 84, on right: 41 42 44 45 48 50 55 56 61 63 64 65
    66 67 68 70 71 72 73 74 75 76 77 79 80 82 85
assign_stmt (107)
    on left: 85, on right: 51 53 69
number (108)
    on left: 86 87, on right: 81
identifier (109)
    on left: 88 89, on right: 8 30 31 52 54 78 85
array (110)
    on left: 90 91 92 93, on right: 89 90 93


State 0

    0 $accept: . code1 $end

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    code1  go to state 11
    code   go to state 12
    decl   go to state 13
    type   go to state 14
    basic  go to state 15
    void   go to state 16


State 1

   14 decl: T_STRUCT . ID block ';'

    ID  shift, and go to state 17


State 2

    9 decl: T_TYPEDEF . type ID ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 18
    basic  go to state 15


State 3

   20 basic: T_CHAR .

    $default  reduce using rule 20 (basic)


State 4

   22 basic: T_DOUBLE .

    $default  reduce using rule 22 (basic)


State 5

   19 basic: T_INT .

    $default  reduce using rule 19 (basic)


State 6

   21 basic: T_FLOAT .

    $default  reduce using rule 21 (basic)


State 7

   18 basic: T_LONG_LONG .

    $default  reduce using rule 18 (basic)


State 8

   25 void: T_VOID .

    $default  reduce using rule 25 (void)


State 9

   23 basic: T_BOOL .

    $default  reduce using rule 23 (basic)


State 10

   15 decl: T_HEADER .

    $default  reduce using rule 15 (decl)


State 11

    0 $accept: code1 . $end

    $end  shift, and go to state 19


State 12

    5 code1: code .

    $default  reduce using rule 5 (code1)


State 13

    6 code: decl . Marker_If code
    7     | decl .

    $end      reduce using rule 7 (code)
    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 20
    epsilon    go to state 21


State 14

    8 decl: type . identifier ';'
   11     | type . func $@1 block
   16 type: type . '*'

    ID      shift, and go to state 22
    T_MAIN  shift, and go to state 23
    '*'     shift, and go to state 24

    func        go to state 25
    identifier  go to state 26


State 15

   17 type: basic .

    $default  reduce using rule 17 (type)


State 16

   13 decl: void . func $@2 block
   24 void: void . '*'

    ID      shift, and go to state 27
    T_MAIN  shift, and go to state 23
    '*'     shift, and go to state 28

    func  go to state 29


State 17

   14 decl: T_STRUCT ID . block ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '{'          shift, and go to state 38
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    brac_open    go to state 48
    block        go to state 49
    S            go to state 50
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 18

    9 decl: T_TYPEDEF type . ID ';'
   16 type: type . '*'

    ID   shift, and go to state 57
    '*'  shift, and go to state 24


State 19

    0 $accept: code1 $end .

    $default  accept


State 20

    6 code: decl Marker_If . code

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    code   go to state 58
    decl   go to state 13
    type   go to state 14
    basic  go to state 15
    void   go to state 16


State 21

    1 Marker_If: epsilon .

    $default  reduce using rule 1 (Marker_If)


State 22

   26 func: ID . '(' args ')'
   27     | ID . '(' ')'
   88 identifier: ID .
   89           | ID . array

    '('  shift, and go to state 59
    '['  shift, and go to state 60

    $default  reduce using rule 88 (identifier)

    array  go to state 61


State 23

   28 func: T_MAIN . '(' args ')'
   29     | T_MAIN . '(' ')'

    '('  shift, and go to state 62


State 24

   16 type: type '*' .

    $default  reduce using rule 16 (type)


State 25

   11 decl: type func . $@1 block

    $default  reduce using rule 10 ($@1)

    $@1  go to state 63


State 26

    8 decl: type identifier . ';'

    ';'  shift, and go to state 64


State 27

   26 func: ID . '(' args ')'
   27     | ID . '(' ')'

    '('  shift, and go to state 59


State 28

   24 void: void '*' .

    $default  reduce using rule 24 (void)


State 29

   13 decl: void func . $@2 block

    $default  reduce using rule 12 ($@2)

    $@2  go to state 65


State 30

   58 block_stmt: T_FOR . '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If $@4 M brac_close

    '('  shift, and go to state 66


State 31

   55 block_stmt: T_IF . '(' expr ')' brac_open Marker_If M brac_close
   56           | T_IF . '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    '('  shift, and go to state 67


State 32

   60 block_stmt: T_WHILE . Marker_If '(' S1 ')' brac_open Marker_If $@5 M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 68
    epsilon    go to state 21


State 33

   48 S1: T_RETURN . expr
   49   | T_RETURN .

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    $default  reduce using rule 49 (S1)

    expr         go to state 69
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 34

   50 S1: T_PRINT_INT . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 70
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 35

   87 number: T_DEC_FLOAT .

    $default  reduce using rule 87 (number)


State 36

   86 number: T_DEC_INT .

    $default  reduce using rule 86 (number)


State 37

   62 expr: ID . '(' exprlist ')'
   88 identifier: ID .
   89           | ID . array

    '('  shift, and go to state 71
    '['  shift, and go to state 60

    $default  reduce using rule 88 (identifier)

    array  go to state 61


State 38

   32 brac_open: '{' .

    $default  reduce using rule 32 (brac_open)


State 39

   77 expr: '(' . expr ')'

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 72
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 40

   79 expr: '+' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 73
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 41

   80 expr: '-' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 74
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 42

   82 expr: '*' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 75
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 43

   76 expr: '!' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 76
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 44

   40 S: ';' .

    $default  reduce using rule 40 (S)


State 45

   83 expr: "true" .

    $default  reduce using rule 83 (expr)


State 46

   84 expr: "false" .

    $default  reduce using rule 84 (expr)


State 47

   16 type: type . '*'
   47 S1: type . $@3 init

    '*'  shift, and go to state 24

    $default  reduce using rule 46 ($@3)

    $@3  go to state 77


State 48

   34 block: brac_open . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 78
    S            go to state 79
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 49

   14 decl: T_STRUCT ID block . ';'

    ';'  shift, and go to state 80


State 50

   35 block: S .

    $default  reduce using rule 35 (block)


State 51

   38 S: S1 . ';'

    ';'  shift, and go to state 81


State 52

   39 S: block_stmt .

    $default  reduce using rule 39 (S)


State 53

   44 S1: expr . ',' Marker_If S1
   45   | expr .
   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    ','                   shift, and go to state 82
    T_OR                  shift, and go to state 83
    T_AND                 shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95

    $default  reduce using rule 45 (S1)


State 54

   69 expr: assign_stmt .

    $default  reduce using rule 69 (expr)


State 55

   81 expr: number .

    $default  reduce using rule 81 (expr)


State 56

   78 expr: identifier .
   85 assign_stmt: identifier . '=' expr

    '='  shift, and go to state 96

    $default  reduce using rule 78 (expr)


State 57

    9 decl: T_TYPEDEF type ID . ';'

    ';'  shift, and go to state 97


State 58

    6 code: decl Marker_If code .

    $default  reduce using rule 6 (code)


State 59

   26 func: ID '(' . args ')'
   27     | ID '(' . ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    ')'          shift, and go to state 98

    type   go to state 99
    basic  go to state 15
    args   go to state 100


State 60

   90 array: '[' . ID ']' array
   91      | '[' . ID ']'
   92      | '[' . T_DEC_INT ']'
   93      | '[' . T_DEC_INT ']' array

    T_DEC_INT  shift, and go to state 101
    ID         shift, and go to state 102


State 61

   89 identifier: ID array .

    $default  reduce using rule 89 (identifier)


State 62

   28 func: T_MAIN '(' . args ')'
   29     | T_MAIN '(' . ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    ')'          shift, and go to state 103

    type   go to state 99
    basic  go to state 15
    args   go to state 104


State 63

   11 decl: type func $@1 . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '{'          shift, and go to state 38
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    brac_open    go to state 48
    block        go to state 105
    S            go to state 50
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 64

    8 decl: type identifier ';' .

    $default  reduce using rule 8 (decl)


State 65

   13 decl: void func $@2 . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '{'          shift, and go to state 38
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    brac_open    go to state 48
    block        go to state 106
    S            go to state 50
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 66

   58 block_stmt: T_FOR '(' . S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If $@4 M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S1           go to state 107
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 67

   55 block_stmt: T_IF '(' . expr ')' brac_open Marker_If M brac_close
   56           | T_IF '(' . expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 108
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 68

   60 block_stmt: T_WHILE Marker_If . '(' S1 ')' brac_open Marker_If $@5 M brac_close

    '('  shift, and go to state 109


State 69

   48 S1: T_RETURN expr .
   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 83
    T_AND                 shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95

    $default  reduce using rule 48 (S1)


State 70

   50 S1: T_PRINT_INT expr .
   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 83
    T_AND                 shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95

    $default  reduce using rule 50 (S1)


State 71

   62 expr: ID '(' . exprlist ')'

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    $default  reduce using rule 4 (epsilon)

    epsilon      go to state 110
    exprlist     go to state 111
    expr         go to state 112
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 72

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr
   77     | '(' expr . ')'

    T_OR                  shift, and go to state 83
    T_AND                 shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95
    ')'                   shift, and go to state 113


State 73

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr
   79     | '+' expr .

    $default  reduce using rule 79 (expr)


State 74

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr
   80     | '-' expr .

    $default  reduce using rule 80 (expr)


State 75

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr
   82     | '*' expr .

    $default  reduce using rule 82 (expr)


State 76

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr
   76     | '!' expr .

    $default  reduce using rule 76 (expr)


State 77

   47 S1: type $@3 . init

    ID  shift, and go to state 114

    init         go to state 115
    assign_stmt  go to state 116
    identifier   go to state 117


State 78

   34 block: brac_open M . brac_close
   36 M: M . Marker_If S

    '}'  shift, and go to state 118

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 119
    epsilon     go to state 21
    brac_close  go to state 120


State 79

   37 M: S .

    $default  reduce using rule 37 (M)


State 80

   14 decl: T_STRUCT ID block ';' .

    $default  reduce using rule 14 (decl)


State 81

   38 S: S1 ';' .

    $default  reduce using rule 38 (S)


State 82

   44 S1: expr ',' . Marker_If S1

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 121
    epsilon    go to state 21


State 83

   75 expr: expr T_OR . Marker_If expr

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 122
    epsilon    go to state 21


State 84

   74 expr: expr T_AND . Marker_If expr

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 123
    epsilon    go to state 21


State 85

   63 expr: expr T_EQUAL_TEST . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 124
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 86

   68 expr: expr T_NOT_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 125
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 87

   65 expr: expr '>' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 126
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 88

   67 expr: expr T_GREATER_THAN_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 127
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 89

   64 expr: expr '<' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 128
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 90

   66 expr: expr T_LESS_THAN_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 129
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 91

   61 expr: expr '+' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 130
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 92

   70 expr: expr '-' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 131
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 93

   71 expr: expr '*' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 132
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 94

   72 expr: expr '/' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 133
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 95

   73 expr: expr '%' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 134
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 96

   85 assign_stmt: identifier '=' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 135
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 97

    9 decl: T_TYPEDEF type ID ';' .

    $default  reduce using rule 9 (decl)


State 98

   27 func: ID '(' ')' .

    $default  reduce using rule 27 (func)


State 99

   16 type: type . '*'
   31 args: type . identifier

    ID   shift, and go to state 114
    '*'  shift, and go to state 24

    identifier  go to state 136


State 100

   26 func: ID '(' args . ')'
   30 args: args . ',' type identifier

    ','  shift, and go to state 137
    ')'  shift, and go to state 138


State 101

   92 array: '[' T_DEC_INT . ']'
   93      | '[' T_DEC_INT . ']' array

    ']'  shift, and go to state 139


State 102

   90 array: '[' ID . ']' array
   91      | '[' ID . ']'

    ']'  shift, and go to state 140


State 103

   29 func: T_MAIN '(' ')' .

    $default  reduce using rule 29 (func)


State 104

   28 func: T_MAIN '(' args . ')'
   30 args: args . ',' type identifier

    ','  shift, and go to state 137
    ')'  shift, and go to state 141


State 105

   11 decl: type func $@1 block .

    $default  reduce using rule 11 (decl)


State 106

   13 decl: void func $@2 block .

    $default  reduce using rule 13 (decl)


State 107

   58 block_stmt: T_FOR '(' S1 . ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If $@4 M brac_close

    ';'  shift, and go to state 142


State 108

   55 block_stmt: T_IF '(' expr . ')' brac_open Marker_If M brac_close
   56           | T_IF '(' expr . ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close
   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 83
    T_AND                 shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95
    ')'                   shift, and go to state 143


State 109

   60 block_stmt: T_WHILE Marker_If '(' . S1 ')' brac_open Marker_If $@5 M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S1           go to state 144
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 110

   43 exprlist: epsilon .

    $default  reduce using rule 43 (exprlist)


State 111

   41 exprlist: exprlist . ',' expr
   62 expr: ID '(' exprlist . ')'

    ','  shift, and go to state 145
    ')'  shift, and go to state 146


State 112

   42 exprlist: expr .
   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 83
    T_AND                 shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95

    $default  reduce using rule 42 (exprlist)


State 113

   77 expr: '(' expr ')' .

    $default  reduce using rule 77 (expr)


State 114

   88 identifier: ID .
   89           | ID . array

    '['  shift, and go to state 60

    $default  reduce using rule 88 (identifier)

    array  go to state 61


State 115

   47 S1: type $@3 init .

    $default  reduce using rule 47 (S1)


State 116

   51 init: assign_stmt . ',' init
   53     | assign_stmt .

    ','  shift, and go to state 147

    $default  reduce using rule 53 (init)


State 117

   52 init: identifier . ',' init
   54     | identifier .
   85 assign_stmt: identifier . '=' expr

    ','  shift, and go to state 148
    '='  shift, and go to state 96

    $default  reduce using rule 54 (init)


State 118

   33 brac_close: '}' .

    $default  reduce using rule 33 (brac_close)


State 119

   36 M: M Marker_If . S

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S            go to state 149
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 120

   34 block: brac_open M brac_close .

    $default  reduce using rule 34 (block)


State 121

   44 S1: expr ',' Marker_If . S1

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S1           go to state 150
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 122

   75 expr: expr T_OR Marker_If . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 151
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 123

   74 expr: expr T_AND Marker_If . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 152
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 124

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   63     | expr T_EQUAL_TEST expr .
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95

    $default  reduce using rule 63 (expr)


State 125

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   68     | expr T_NOT_EQUAL expr .
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95

    $default  reduce using rule 68 (expr)


State 126

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   65     | expr '>' expr .
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    '<'                shift, and go to state 89
    T_LESS_THAN_EQUAL  shift, and go to state 90
    '+'                shift, and go to state 91
    '-'                shift, and go to state 92
    '*'                shift, and go to state 93
    '/'                shift, and go to state 94
    '%'                shift, and go to state 95

    $default  reduce using rule 65 (expr)


State 127

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr T_GREATER_THAN_EQUAL expr .
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    '<'                shift, and go to state 89
    T_LESS_THAN_EQUAL  shift, and go to state 90
    '+'                shift, and go to state 91
    '-'                shift, and go to state 92
    '*'                shift, and go to state 93
    '/'                shift, and go to state 94
    '%'                shift, and go to state 95

    $default  reduce using rule 67 (expr)


State 128

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   64     | expr '<' expr .
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95

    $default  reduce using rule 64 (expr)


State 129

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   66     | expr T_LESS_THAN_EQUAL expr .
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95

    $default  reduce using rule 66 (expr)


State 130

   61 expr: expr . '+' expr
   61     | expr '+' expr .
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95

    $default  reduce using rule 61 (expr)


State 131

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   70     | expr '-' expr .
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95

    $default  reduce using rule 70 (expr)


State 132

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   71     | expr '*' expr .
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    $default  reduce using rule 71 (expr)


State 133

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   72     | expr '/' expr .
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    $default  reduce using rule 72 (expr)


State 134

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   73     | expr '%' expr .
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    $default  reduce using rule 73 (expr)


State 135

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr
   85 assign_stmt: identifier '=' expr .

    T_OR                  shift, and go to state 83
    T_AND                 shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95

    $default  reduce using rule 85 (assign_stmt)


State 136

   31 args: type identifier .

    $default  reduce using rule 31 (args)


State 137

   30 args: args ',' . type identifier

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 153
    basic  go to state 15


State 138

   26 func: ID '(' args ')' .

    $default  reduce using rule 26 (func)


State 139

   92 array: '[' T_DEC_INT ']' .
   93      | '[' T_DEC_INT ']' . array

    '['  shift, and go to state 60

    $default  reduce using rule 92 (array)

    array  go to state 154


State 140

   90 array: '[' ID ']' . array
   91      | '[' ID ']' .

    '['  shift, and go to state 60

    $default  reduce using rule 91 (array)

    array  go to state 155


State 141

   28 func: T_MAIN '(' args ')' .

    $default  reduce using rule 28 (func)


State 142

   58 block_stmt: T_FOR '(' S1 ';' . Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If $@4 M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 156
    epsilon    go to state 21


State 143

   55 block_stmt: T_IF '(' expr ')' . brac_open Marker_If M brac_close
   56           | T_IF '(' expr ')' . brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    '{'  shift, and go to state 38

    brac_open  go to state 157


State 144

   60 block_stmt: T_WHILE Marker_If '(' S1 . ')' brac_open Marker_If $@5 M brac_close

    ')'  shift, and go to state 158


State 145

   41 exprlist: exprlist ',' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 159
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 146

   62 expr: ID '(' exprlist ')' .

    $default  reduce using rule 62 (expr)


State 147

   51 init: assign_stmt ',' . init

    ID  shift, and go to state 114

    init         go to state 160
    assign_stmt  go to state 116
    identifier   go to state 117


State 148

   52 init: identifier ',' . init

    ID  shift, and go to state 114

    init         go to state 161
    assign_stmt  go to state 116
    identifier   go to state 117


State 149

   36 M: M Marker_If S .

    $default  reduce using rule 36 (M)


State 150

   44 S1: expr ',' Marker_If S1 .

    $default  reduce using rule 44 (S1)


State 151

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr
   75     | expr T_OR Marker_If expr .

    T_AND                 shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95

    $default  reduce using rule 75 (expr)


State 152

   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   74     | expr T_AND Marker_If expr .
   75     | expr . T_OR Marker_If expr

    T_EQUAL_TEST          shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95

    $default  reduce using rule 74 (expr)


State 153

   16 type: type . '*'
   30 args: args ',' type . identifier

    ID   shift, and go to state 114
    '*'  shift, and go to state 24

    identifier  go to state 162


State 154

   93 array: '[' T_DEC_INT ']' array .

    $default  reduce using rule 93 (array)


State 155

   90 array: '[' ID ']' array .

    $default  reduce using rule 90 (array)


State 156

   58 block_stmt: T_FOR '(' S1 ';' Marker_If . S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If $@4 M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S1           go to state 163
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 157

   55 block_stmt: T_IF '(' expr ')' brac_open . Marker_If M brac_close
   56           | T_IF '(' expr ')' brac_open . Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 164
    epsilon    go to state 21


State 158

   60 block_stmt: T_WHILE Marker_If '(' S1 ')' . brac_open Marker_If $@5 M brac_close

    '{'  shift, and go to state 38

    brac_open  go to state 165


State 159

   41 exprlist: exprlist ',' expr .
   61 expr: expr . '+' expr
   63     | expr . T_EQUAL_TEST expr
   64     | expr . '<' expr
   65     | expr . '>' expr
   66     | expr . T_LESS_THAN_EQUAL expr
   67     | expr . T_GREATER_THAN_EQUAL expr
   68     | expr . T_NOT_EQUAL expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | expr . T_AND Marker_If expr
   75     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 83
    T_AND                 shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    '>'                   shift, and go to state 87
    T_GREATER_THAN_EQUAL  shift, and go to state 88
    '<'                   shift, and go to state 89
    T_LESS_THAN_EQUAL     shift, and go to state 90
    '+'                   shift, and go to state 91
    '-'                   shift, and go to state 92
    '*'                   shift, and go to state 93
    '/'                   shift, and go to state 94
    '%'                   shift, and go to state 95

    $default  reduce using rule 41 (exprlist)


State 160

   51 init: assign_stmt ',' init .

    $default  reduce using rule 51 (init)


State 161

   52 init: identifier ',' init .

    $default  reduce using rule 52 (init)


State 162

   30 args: args ',' type identifier .

    $default  reduce using rule 30 (args)


State 163

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 . ';' Marker_If S1 Marker_For ')' brac_open Marker_If $@4 M brac_close

    ';'  shift, and go to state 166


State 164

   55 block_stmt: T_IF '(' expr ')' brac_open Marker_If . M brac_close
   56           | T_IF '(' expr ')' brac_open Marker_If . M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 167
    S            go to state 79
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 165

   60 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open . Marker_If $@5 M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 168
    epsilon    go to state 21


State 166

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' . Marker_If S1 Marker_For ')' brac_open Marker_If $@4 M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 169
    epsilon    go to state 21


State 167

   36 M: M . Marker_If S
   55 block_stmt: T_IF '(' expr ')' brac_open Marker_If M . brac_close
   56           | T_IF '(' expr ')' brac_open Marker_If M . brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    '}'  shift, and go to state 118

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 119
    epsilon     go to state 21
    brac_close  go to state 170


State 168

   60 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If . $@5 M brac_close

    $default  reduce using rule 59 ($@5)

    $@5  go to state 171


State 169

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If . S1 Marker_For ')' brac_open Marker_If $@4 M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S1           go to state 172
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 170

   55 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close .
   56           | T_IF '(' expr ')' brac_open Marker_If M brac_close . Marker_Else T_ELSE brac_open Marker_If M brac_close

    T_ELSE    reduce using rule 4 (epsilon)
    $default  reduce using rule 55 (block_stmt)

    Marker_Else  go to state 173
    epsilon      go to state 174


State 171

   60 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If $@5 . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 175
    S            go to state 79
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 172

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 . Marker_For ')' brac_open Marker_If $@4 M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_For  go to state 176
    epsilon     go to state 177


State 173

   56 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else . T_ELSE brac_open Marker_If M brac_close

    T_ELSE  shift, and go to state 178


State 174

    2 Marker_Else: epsilon .

    $default  reduce using rule 2 (Marker_Else)


State 175

   36 M: M . Marker_If S
   60 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If $@5 M . brac_close

    '}'  shift, and go to state 118

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 119
    epsilon     go to state 21
    brac_close  go to state 179


State 176

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For . ')' brac_open Marker_If $@4 M brac_close

    ')'  shift, and go to state 180


State 177

    3 Marker_For: epsilon .

    $default  reduce using rule 3 (Marker_For)


State 178

   56 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE . brac_open Marker_If M brac_close

    '{'  shift, and go to state 38

    brac_open  go to state 181


State 179

   60 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If $@5 M brac_close .

    $default  reduce using rule 60 (block_stmt)


State 180

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' . brac_open Marker_If $@4 M brac_close

    '{'  shift, and go to state 38

    brac_open  go to state 182


State 181

   56 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open . Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 183
    epsilon    go to state 21


State 182

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open . Marker_If $@4 M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 184
    epsilon    go to state 21


State 183

   56 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 185
    S            go to state 79
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 184

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If . $@4 M brac_close

    $default  reduce using rule 57 ($@4)

    $@4  go to state 186


State 185

   36 M: M . Marker_If S
   56 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M . brac_close

    '}'  shift, and go to state 118

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 119
    epsilon     go to state 21
    brac_close  go to state 187


State 186

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If $@4 . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 188
    S            go to state 79
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 187

   56 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close .

    $default  reduce using rule 56 (block_stmt)


State 188

   36 M: M . Marker_If S
   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If $@4 M . brac_close

    '}'  shift, and go to state 118

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 119
    epsilon     go to state 21
    brac_close  go to state 189


State 189

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If $@4 M brac_close .

    $default  reduce using rule 58 (block_stmt)
