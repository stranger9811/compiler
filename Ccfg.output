Terminals unused in grammar

   T_BREAK
   T_CONTINUE
   T_GOTO
   T_PRINTF
   T_SCANF
   T_SIZEOF
   T_UNSIGNED
   T_SIGNED
   T_CONST
   T_SHORT
   T_EXTERN
   T_LONG
   T_APOS
   T_STRING
   T_IO_INT
   T_IO_LONG_LONG
   T_IO_STRING
   T_IO_FLOAT
   T_DIVIDE_SELF
   T_MULT_SELF
   T_MINUS_SELF
   T_PLUS_SELF
   '|'
   '^'
   '&'
   T_SUB_ONE
   T_ADD_ONE
   T_THIS_POINTER
   '.'


Grammar

    0 $accept: code1 $end

    1 Marker_If: epsilon

    2 Marker_Else: epsilon

    3 Marker_For: epsilon

    4 epsilon: /* empty */

    5 code1: code

    6 code: decl Marker_If code
    7     | decl

    8 decl: type identifier ';'
    9     | T_TYPEDEF type ID ';'
   10     | type func block
   11     | void func block
   12     | T_STRUCT ID block ';'
   13     | T_HEADER

   14 type: type '*'
   15     | basic

   16 basic: T_LONG_LONG
   17      | T_INT
   18      | T_CHAR
   19      | T_FLOAT
   20      | T_DOUBLE
   21      | T_BOOL

   22 void: void '*'
   23     | T_VOID

   24 func: ID '(' args ')'
   25     | ID '(' ')'
   26     | T_MAIN '(' args ')'
   27     | T_MAIN '(' ')'

   28 args: type identifier ',' args
   29     | type identifier

   30 brac_open: '{'

   31 brac_close: '}'

   32 block: brac_open M brac_close
   33      | S

   34 M: M Marker_If S
   35  | S

   36 S: S1 ';'
   37  | block_stmt

   38 S1: expr ',' Marker_If S1
   39   | expr
   40   | type init
   41   | T_RETURN expr
   42   | T_RETURN

   43 init: assign_stmt ',' init
   44     | identifier ',' init
   45     | assign_stmt
   46     | identifier

   47 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close
   48           | T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close
   49           | T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close
   50           | T_WHILE Marker_If '(' S1 ')' brac_open Marker_If M brac_close

   51 expr: expr '+' expr
   52     | func
   53     | expr T_EQUAL_TEST expr
   54     | expr '<' expr
   55     | expr '>' expr
   56     | expr T_LESS_THAN_EQUAL expr
   57     | expr T_GREATER_THAN_EQUAL expr
   58     | expr T_NOT_EQUAL expr
   59     | assign_stmt
   60     | expr '-' expr
   61     | expr '*' expr
   62     | expr '/' expr
   63     | expr '%' expr
   64     | expr T_AND Marker_If expr
   65     | expr T_OR Marker_If expr
   66     | '!' expr
   67     | '(' expr ')'
   68     | identifier
   69     | '+' expr
   70     | '-' expr
   71     | number
   72     | '*' expr
   73     | "true"
   74     | "false"

   75 assign_stmt: identifier '=' expr

   76 number: T_DEC_INT
   77       | T_DEC_FLOAT

   78 identifier: ID
   79           | ID array

   80 array: '[' ID ']' array
   81      | '[' ID ']'
   82      | '[' T_DEC_INT ']'
   83      | '[' T_DEC_INT ']' array


Terminals, with rules where they appear

$end (0) 0
'!' (33) 66
'%' (37) 63
'&' (38)
'(' (40) 24 25 26 27 47 48 49 50 67
')' (41) 24 25 26 27 47 48 49 50 67
'*' (42) 14 22 61 72
'+' (43) 51 69
',' (44) 28 38 43 44
'-' (45) 60 70
'.' (46)
'/' (47) 62
';' (59) 8 9 12 36 49
'<' (60) 54
'=' (61) 75
'>' (62) 55
'[' (91) 80 81 82 83
']' (93) 80 81 82 83
'^' (94)
'{' (123) 30
'|' (124)
'}' (125) 31
error (256)
T_STRUCT (258) 12
T_BREAK (259)
T_CONTINUE (260)
T_TYPEDEF (261) 9
T_CHAR (262) 18
T_DOUBLE (263) 20
T_INT (264) 17
T_FLOAT (265) 19
T_LONG_LONG (266) 16
T_FOR (267) 49
T_IF (268) 47 48
T_ELSE (269) 48
T_WHILE (270) 50
T_GOTO (271)
T_RETURN (272) 41 42
T_PRINTF (273)
T_VOID (274) 23
T_SCANF (275)
T_SIZEOF (276)
T_UNSIGNED (277)
T_SIGNED (278)
T_CONST (279)
T_SHORT (280)
T_EXTERN (281)
T_LONG (282)
T_BOOL (283) 21
T_APOS (284)
T_DEC_FLOAT (285) 77
T_DEC_INT (286) 76 82 83
T_STRING (287)
T_HEADER (288) 13
ID (289) 9 12 24 25 78 79 80 81
T_MAIN (290) 26 27
T_IO_INT (291)
T_IO_LONG_LONG (292)
T_IO_STRING (293)
T_IO_FLOAT (294)
T_DIVIDE_SELF (295)
T_MULT_SELF (296)
T_MINUS_SELF (297)
T_PLUS_SELF (298)
T_OR (299) 65
T_AND (300) 64
T_NOT_EQUAL (301) 58
T_EQUAL_TEST (302) 53
T_GREATER_THAN_EQUAL (303) 57
T_LESS_THAN_EQUAL (304) 56
DEREF (305)
UMINUS (306)
UPLUS (307)
T_SUB_ONE (308)
T_ADD_ONE (309)
T_THIS_POINTER (310)
"true" (311) 73
"false" (312) 74


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
Marker_If (80)
    on left: 1, on right: 6 34 38 47 48 49 50 64 65
Marker_Else (81)
    on left: 2, on right: 48
Marker_For (82)
    on left: 3, on right: 49
epsilon (83)
    on left: 4, on right: 1 2 3
code1 (84)
    on left: 5, on right: 0
code (85)
    on left: 6 7, on right: 5 6
decl (86)
    on left: 8 9 10 11 12 13, on right: 6 7
type (87)
    on left: 14 15, on right: 8 9 10 14 28 29 40
basic (88)
    on left: 16 17 18 19 20 21, on right: 15
void (89)
    on left: 22 23, on right: 11 22
func (90)
    on left: 24 25 26 27, on right: 10 11 52
args (91)
    on left: 28 29, on right: 24 26 28
brac_open (92)
    on left: 30, on right: 32 47 48 49 50
brac_close (93)
    on left: 31, on right: 32 47 48 49 50
block (94)
    on left: 32 33, on right: 10 11 12
M (95)
    on left: 34 35, on right: 32 34 47 48 49 50
S (96)
    on left: 36 37, on right: 33 34 35
S1 (97)
    on left: 38 39 40 41 42, on right: 36 38 49 50
init (98)
    on left: 43 44 45 46, on right: 40 43 44
block_stmt (99)
    on left: 47 48 49 50, on right: 37
expr (100)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70 71 72 73 74, on right: 38 39 41 47 48 51 53 54 55 56 57 58
    60 61 62 63 64 65 66 67 69 70 72 75
assign_stmt (101)
    on left: 75, on right: 43 45 59
number (102)
    on left: 76 77, on right: 71
identifier (103)
    on left: 78 79, on right: 8 28 29 44 46 68 75
array (104)
    on left: 80 81 82 83, on right: 79 80 83


State 0

    0 $accept: . code1 $end

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    code1  go to state 11
    code   go to state 12
    decl   go to state 13
    type   go to state 14
    basic  go to state 15
    void   go to state 16


State 1

   12 decl: T_STRUCT . ID block ';'

    ID  shift, and go to state 17


State 2

    9 decl: T_TYPEDEF . type ID ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 18
    basic  go to state 15


State 3

   18 basic: T_CHAR .

    $default  reduce using rule 18 (basic)


State 4

   20 basic: T_DOUBLE .

    $default  reduce using rule 20 (basic)


State 5

   17 basic: T_INT .

    $default  reduce using rule 17 (basic)


State 6

   19 basic: T_FLOAT .

    $default  reduce using rule 19 (basic)


State 7

   16 basic: T_LONG_LONG .

    $default  reduce using rule 16 (basic)


State 8

   23 void: T_VOID .

    $default  reduce using rule 23 (void)


State 9

   21 basic: T_BOOL .

    $default  reduce using rule 21 (basic)


State 10

   13 decl: T_HEADER .

    $default  reduce using rule 13 (decl)


State 11

    0 $accept: code1 . $end

    $end  shift, and go to state 19


State 12

    5 code1: code .

    $default  reduce using rule 5 (code1)


State 13

    6 code: decl . Marker_If code
    7     | decl .

    $end      reduce using rule 7 (code)
    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 20
    epsilon    go to state 21


State 14

    8 decl: type . identifier ';'
   10     | type . func block
   14 type: type . '*'

    ID      shift, and go to state 22
    T_MAIN  shift, and go to state 23
    '*'     shift, and go to state 24

    func        go to state 25
    identifier  go to state 26


State 15

   15 type: basic .

    $default  reduce using rule 15 (type)


State 16

   11 decl: void . func block
   22 void: void . '*'

    ID      shift, and go to state 27
    T_MAIN  shift, and go to state 23
    '*'     shift, and go to state 28

    func  go to state 29


State 17

   12 decl: T_STRUCT ID . block ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '{'          shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    brac_open    go to state 46
    block        go to state 47
    S            go to state 48
    S1           go to state 49
    block_stmt   go to state 50
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 18

    9 decl: T_TYPEDEF type . ID ';'
   14 type: type . '*'

    ID   shift, and go to state 55
    '*'  shift, and go to state 24


State 19

    0 $accept: code1 $end .

    $default  accept


State 20

    6 code: decl Marker_If . code

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    code   go to state 56
    decl   go to state 13
    type   go to state 14
    basic  go to state 15
    void   go to state 16


State 21

    1 Marker_If: epsilon .

    $default  reduce using rule 1 (Marker_If)


State 22

   24 func: ID . '(' args ')'
   25     | ID . '(' ')'
   78 identifier: ID .
   79           | ID . array

    '('  shift, and go to state 57
    '['  shift, and go to state 58

    $default  reduce using rule 78 (identifier)

    array  go to state 59


State 23

   26 func: T_MAIN . '(' args ')'
   27     | T_MAIN . '(' ')'

    '('  shift, and go to state 60


State 24

   14 type: type '*' .

    $default  reduce using rule 14 (type)


State 25

   10 decl: type func . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '{'          shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    brac_open    go to state 46
    block        go to state 61
    S            go to state 48
    S1           go to state 49
    block_stmt   go to state 50
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 26

    8 decl: type identifier . ';'

    ';'  shift, and go to state 62


State 27

   24 func: ID . '(' args ')'
   25     | ID . '(' ')'

    '('  shift, and go to state 57


State 28

   22 void: void '*' .

    $default  reduce using rule 22 (void)


State 29

   11 decl: void func . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '{'          shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    brac_open    go to state 46
    block        go to state 63
    S            go to state 48
    S1           go to state 49
    block_stmt   go to state 50
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 30

   49 block_stmt: T_FOR . '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    '('  shift, and go to state 64


State 31

   47 block_stmt: T_IF . '(' expr ')' brac_open Marker_If M brac_close
   48           | T_IF . '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    '('  shift, and go to state 65


State 32

   50 block_stmt: T_WHILE . Marker_If '(' S1 ')' brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 66
    epsilon    go to state 21


State 33

   41 S1: T_RETURN . expr
   42   | T_RETURN .

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    $default  reduce using rule 42 (S1)

    func         go to state 45
    expr         go to state 67
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 34

   77 number: T_DEC_FLOAT .

    $default  reduce using rule 77 (number)


State 35

   76 number: T_DEC_INT .

    $default  reduce using rule 76 (number)


State 36

   30 brac_open: '{' .

    $default  reduce using rule 30 (brac_open)


State 37

   67 expr: '(' . expr ')'

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 68
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 38

   69 expr: '+' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 69
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 39

   70 expr: '-' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 70
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 40

   72 expr: '*' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 71
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 41

   66 expr: '!' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 72
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 42

   73 expr: "true" .

    $default  reduce using rule 73 (expr)


State 43

   74 expr: "false" .

    $default  reduce using rule 74 (expr)


State 44

   14 type: type . '*'
   40 S1: type . init

    ID   shift, and go to state 73
    '*'  shift, and go to state 24

    init         go to state 74
    assign_stmt  go to state 75
    identifier   go to state 76


State 45

   52 expr: func .

    $default  reduce using rule 52 (expr)


State 46

   32 block: brac_open . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    M            go to state 77
    S            go to state 78
    S1           go to state 49
    block_stmt   go to state 50
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 47

   12 decl: T_STRUCT ID block . ';'

    ';'  shift, and go to state 79


State 48

   33 block: S .

    $default  reduce using rule 33 (block)


State 49

   36 S: S1 . ';'

    ';'  shift, and go to state 80


State 50

   37 S: block_stmt .

    $default  reduce using rule 37 (S)


State 51

   38 S1: expr . ',' Marker_If S1
   39   | expr .
   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    ','                   shift, and go to state 81
    T_OR                  shift, and go to state 82
    T_AND                 shift, and go to state 83
    T_NOT_EQUAL           shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    '>'                   shift, and go to state 86
    T_GREATER_THAN_EQUAL  shift, and go to state 87
    '<'                   shift, and go to state 88
    T_LESS_THAN_EQUAL     shift, and go to state 89
    '+'                   shift, and go to state 90
    '-'                   shift, and go to state 91
    '*'                   shift, and go to state 92
    '/'                   shift, and go to state 93
    '%'                   shift, and go to state 94

    $default  reduce using rule 39 (S1)


State 52

   59 expr: assign_stmt .

    $default  reduce using rule 59 (expr)


State 53

   71 expr: number .

    $default  reduce using rule 71 (expr)


State 54

   68 expr: identifier .
   75 assign_stmt: identifier . '=' expr

    '='  shift, and go to state 95

    $default  reduce using rule 68 (expr)


State 55

    9 decl: T_TYPEDEF type ID . ';'

    ';'  shift, and go to state 96


State 56

    6 code: decl Marker_If code .

    $default  reduce using rule 6 (code)


State 57

   24 func: ID '(' . args ')'
   25     | ID '(' . ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    ')'          shift, and go to state 97

    type   go to state 98
    basic  go to state 15
    args   go to state 99


State 58

   80 array: '[' . ID ']' array
   81      | '[' . ID ']'
   82      | '[' . T_DEC_INT ']'
   83      | '[' . T_DEC_INT ']' array

    T_DEC_INT  shift, and go to state 100
    ID         shift, and go to state 101


State 59

   79 identifier: ID array .

    $default  reduce using rule 79 (identifier)


State 60

   26 func: T_MAIN '(' . args ')'
   27     | T_MAIN '(' . ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    ')'          shift, and go to state 102

    type   go to state 98
    basic  go to state 15
    args   go to state 103


State 61

   10 decl: type func block .

    $default  reduce using rule 10 (decl)


State 62

    8 decl: type identifier ';' .

    $default  reduce using rule 8 (decl)


State 63

   11 decl: void func block .

    $default  reduce using rule 11 (decl)


State 64

   49 block_stmt: T_FOR '(' . S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    S1           go to state 104
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 65

   47 block_stmt: T_IF '(' . expr ')' brac_open Marker_If M brac_close
   48           | T_IF '(' . expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 105
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 66

   50 block_stmt: T_WHILE Marker_If . '(' S1 ')' brac_open Marker_If M brac_close

    '('  shift, and go to state 106


State 67

   41 S1: T_RETURN expr .
   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 82
    T_AND                 shift, and go to state 83
    T_NOT_EQUAL           shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    '>'                   shift, and go to state 86
    T_GREATER_THAN_EQUAL  shift, and go to state 87
    '<'                   shift, and go to state 88
    T_LESS_THAN_EQUAL     shift, and go to state 89
    '+'                   shift, and go to state 90
    '-'                   shift, and go to state 91
    '*'                   shift, and go to state 92
    '/'                   shift, and go to state 93
    '%'                   shift, and go to state 94

    $default  reduce using rule 41 (S1)


State 68

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr
   67     | '(' expr . ')'

    T_OR                  shift, and go to state 82
    T_AND                 shift, and go to state 83
    T_NOT_EQUAL           shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    '>'                   shift, and go to state 86
    T_GREATER_THAN_EQUAL  shift, and go to state 87
    '<'                   shift, and go to state 88
    T_LESS_THAN_EQUAL     shift, and go to state 89
    '+'                   shift, and go to state 90
    '-'                   shift, and go to state 91
    '*'                   shift, and go to state 92
    '/'                   shift, and go to state 93
    '%'                   shift, and go to state 94
    ')'                   shift, and go to state 107


State 69

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr
   69     | '+' expr .

    $default  reduce using rule 69 (expr)


State 70

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr
   70     | '-' expr .

    $default  reduce using rule 70 (expr)


State 71

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr
   72     | '*' expr .

    $default  reduce using rule 72 (expr)


State 72

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr
   66     | '!' expr .

    $default  reduce using rule 66 (expr)


State 73

   78 identifier: ID .
   79           | ID . array

    '['  shift, and go to state 58

    $default  reduce using rule 78 (identifier)

    array  go to state 59


State 74

   40 S1: type init .

    $default  reduce using rule 40 (S1)


State 75

   43 init: assign_stmt . ',' init
   45     | assign_stmt .

    ','  shift, and go to state 108

    $default  reduce using rule 45 (init)


State 76

   44 init: identifier . ',' init
   46     | identifier .
   75 assign_stmt: identifier . '=' expr

    ','  shift, and go to state 109
    '='  shift, and go to state 95

    $default  reduce using rule 46 (init)


State 77

   32 block: brac_open M . brac_close
   34 M: M . Marker_If S

    '}'  shift, and go to state 110

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 111
    epsilon     go to state 21
    brac_close  go to state 112


State 78

   35 M: S .

    $default  reduce using rule 35 (M)


State 79

   12 decl: T_STRUCT ID block ';' .

    $default  reduce using rule 12 (decl)


State 80

   36 S: S1 ';' .

    $default  reduce using rule 36 (S)


State 81

   38 S1: expr ',' . Marker_If S1

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 113
    epsilon    go to state 21


State 82

   65 expr: expr T_OR . Marker_If expr

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 114
    epsilon    go to state 21


State 83

   64 expr: expr T_AND . Marker_If expr

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 115
    epsilon    go to state 21


State 84

   58 expr: expr T_NOT_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 116
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 85

   53 expr: expr T_EQUAL_TEST . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 117
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 86

   55 expr: expr '>' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 118
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 87

   57 expr: expr T_GREATER_THAN_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 119
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 88

   54 expr: expr '<' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 120
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 89

   56 expr: expr T_LESS_THAN_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 121
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 90

   51 expr: expr '+' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 122
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 91

   60 expr: expr '-' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 123
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 92

   61 expr: expr '*' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 124
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 93

   62 expr: expr '/' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 125
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 94

   63 expr: expr '%' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 126
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 95

   75 assign_stmt: identifier '=' . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 127
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 96

    9 decl: T_TYPEDEF type ID ';' .

    $default  reduce using rule 9 (decl)


State 97

   25 func: ID '(' ')' .

    $default  reduce using rule 25 (func)


State 98

   14 type: type . '*'
   28 args: type . identifier ',' args
   29     | type . identifier

    ID   shift, and go to state 73
    '*'  shift, and go to state 24

    identifier  go to state 128


State 99

   24 func: ID '(' args . ')'

    ')'  shift, and go to state 129


State 100

   82 array: '[' T_DEC_INT . ']'
   83      | '[' T_DEC_INT . ']' array

    ']'  shift, and go to state 130


State 101

   80 array: '[' ID . ']' array
   81      | '[' ID . ']'

    ']'  shift, and go to state 131


State 102

   27 func: T_MAIN '(' ')' .

    $default  reduce using rule 27 (func)


State 103

   26 func: T_MAIN '(' args . ')'

    ')'  shift, and go to state 132


State 104

   49 block_stmt: T_FOR '(' S1 . ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    ';'  shift, and go to state 133


State 105

   47 block_stmt: T_IF '(' expr . ')' brac_open Marker_If M brac_close
   48           | T_IF '(' expr . ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close
   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 82
    T_AND                 shift, and go to state 83
    T_NOT_EQUAL           shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    '>'                   shift, and go to state 86
    T_GREATER_THAN_EQUAL  shift, and go to state 87
    '<'                   shift, and go to state 88
    T_LESS_THAN_EQUAL     shift, and go to state 89
    '+'                   shift, and go to state 90
    '-'                   shift, and go to state 91
    '*'                   shift, and go to state 92
    '/'                   shift, and go to state 93
    '%'                   shift, and go to state 94
    ')'                   shift, and go to state 134


State 106

   50 block_stmt: T_WHILE Marker_If '(' . S1 ')' brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    S1           go to state 135
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 107

   67 expr: '(' expr ')' .

    $default  reduce using rule 67 (expr)


State 108

   43 init: assign_stmt ',' . init

    ID  shift, and go to state 73

    init         go to state 136
    assign_stmt  go to state 75
    identifier   go to state 76


State 109

   44 init: identifier ',' . init

    ID  shift, and go to state 73

    init         go to state 137
    assign_stmt  go to state 75
    identifier   go to state 76


State 110

   31 brac_close: '}' .

    $default  reduce using rule 31 (brac_close)


State 111

   34 M: M Marker_If . S

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    S            go to state 138
    S1           go to state 49
    block_stmt   go to state 50
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 112

   32 block: brac_open M brac_close .

    $default  reduce using rule 32 (block)


State 113

   38 S1: expr ',' Marker_If . S1

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    S1           go to state 139
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 114

   65 expr: expr T_OR Marker_If . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 140
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 115

   64 expr: expr T_AND Marker_If . expr

    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    func         go to state 45
    expr         go to state 141
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 116

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   58     | expr T_NOT_EQUAL expr .
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    '>'                   shift, and go to state 86
    T_GREATER_THAN_EQUAL  shift, and go to state 87
    '<'                   shift, and go to state 88
    T_LESS_THAN_EQUAL     shift, and go to state 89
    '+'                   shift, and go to state 90
    '-'                   shift, and go to state 91
    '*'                   shift, and go to state 92
    '/'                   shift, and go to state 93
    '%'                   shift, and go to state 94

    $default  reduce using rule 58 (expr)


State 117

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   53     | expr T_EQUAL_TEST expr .
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    '>'                   shift, and go to state 86
    T_GREATER_THAN_EQUAL  shift, and go to state 87
    '<'                   shift, and go to state 88
    T_LESS_THAN_EQUAL     shift, and go to state 89
    '+'                   shift, and go to state 90
    '-'                   shift, and go to state 91
    '*'                   shift, and go to state 92
    '/'                   shift, and go to state 93
    '%'                   shift, and go to state 94

    $default  reduce using rule 53 (expr)


State 118

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   55     | expr '>' expr .
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    '<'                shift, and go to state 88
    T_LESS_THAN_EQUAL  shift, and go to state 89
    '+'                shift, and go to state 90
    '-'                shift, and go to state 91
    '*'                shift, and go to state 92
    '/'                shift, and go to state 93
    '%'                shift, and go to state 94

    $default  reduce using rule 55 (expr)


State 119

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   57     | expr T_GREATER_THAN_EQUAL expr .
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    '<'                shift, and go to state 88
    T_LESS_THAN_EQUAL  shift, and go to state 89
    '+'                shift, and go to state 90
    '-'                shift, and go to state 91
    '*'                shift, and go to state 92
    '/'                shift, and go to state 93
    '%'                shift, and go to state 94

    $default  reduce using rule 57 (expr)


State 120

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   54     | expr '<' expr .
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 54 (expr)


State 121

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   56     | expr T_LESS_THAN_EQUAL expr .
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 56 (expr)


State 122

   51 expr: expr . '+' expr
   51     | expr '+' expr .
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 51 (expr)


State 123

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   60     | expr '-' expr .
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 60 (expr)


State 124

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   61     | expr '*' expr .
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    $default  reduce using rule 61 (expr)


State 125

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   62     | expr '/' expr .
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    $default  reduce using rule 62 (expr)


State 126

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   63     | expr '%' expr .
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr

    $default  reduce using rule 63 (expr)


State 127

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr
   75 assign_stmt: identifier '=' expr .

    T_OR                  shift, and go to state 82
    T_AND                 shift, and go to state 83
    T_NOT_EQUAL           shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    '>'                   shift, and go to state 86
    T_GREATER_THAN_EQUAL  shift, and go to state 87
    '<'                   shift, and go to state 88
    T_LESS_THAN_EQUAL     shift, and go to state 89
    '+'                   shift, and go to state 90
    '-'                   shift, and go to state 91
    '*'                   shift, and go to state 92
    '/'                   shift, and go to state 93
    '%'                   shift, and go to state 94

    $default  reduce using rule 75 (assign_stmt)


State 128

   28 args: type identifier . ',' args
   29     | type identifier .

    ','  shift, and go to state 142

    $default  reduce using rule 29 (args)


State 129

   24 func: ID '(' args ')' .

    $default  reduce using rule 24 (func)


State 130

   82 array: '[' T_DEC_INT ']' .
   83      | '[' T_DEC_INT ']' . array

    '['  shift, and go to state 58

    $default  reduce using rule 82 (array)

    array  go to state 143


State 131

   80 array: '[' ID ']' . array
   81      | '[' ID ']' .

    '['  shift, and go to state 58

    $default  reduce using rule 81 (array)

    array  go to state 144


State 132

   26 func: T_MAIN '(' args ')' .

    $default  reduce using rule 26 (func)


State 133

   49 block_stmt: T_FOR '(' S1 ';' . Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 145
    epsilon    go to state 21


State 134

   47 block_stmt: T_IF '(' expr ')' . brac_open Marker_If M brac_close
   48           | T_IF '(' expr ')' . brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    '{'  shift, and go to state 36

    brac_open  go to state 146


State 135

   50 block_stmt: T_WHILE Marker_If '(' S1 . ')' brac_open Marker_If M brac_close

    ')'  shift, and go to state 147


State 136

   43 init: assign_stmt ',' init .

    $default  reduce using rule 43 (init)


State 137

   44 init: identifier ',' init .

    $default  reduce using rule 44 (init)


State 138

   34 M: M Marker_If S .

    $default  reduce using rule 34 (M)


State 139

   38 S1: expr ',' Marker_If S1 .

    $default  reduce using rule 38 (S1)


State 140

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   65     | expr . T_OR Marker_If expr
   65     | expr T_OR Marker_If expr .

    T_AND                 shift, and go to state 83
    T_NOT_EQUAL           shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    '>'                   shift, and go to state 86
    T_GREATER_THAN_EQUAL  shift, and go to state 87
    '<'                   shift, and go to state 88
    T_LESS_THAN_EQUAL     shift, and go to state 89
    '+'                   shift, and go to state 90
    '-'                   shift, and go to state 91
    '*'                   shift, and go to state 92
    '/'                   shift, and go to state 93
    '%'                   shift, and go to state 94

    $default  reduce using rule 65 (expr)


State 141

   51 expr: expr . '+' expr
   53     | expr . T_EQUAL_TEST expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   56     | expr . T_LESS_THAN_EQUAL expr
   57     | expr . T_GREATER_THAN_EQUAL expr
   58     | expr . T_NOT_EQUAL expr
   60     | expr . '-' expr
   61     | expr . '*' expr
   62     | expr . '/' expr
   63     | expr . '%' expr
   64     | expr . T_AND Marker_If expr
   64     | expr T_AND Marker_If expr .
   65     | expr . T_OR Marker_If expr

    T_NOT_EQUAL           shift, and go to state 84
    T_EQUAL_TEST          shift, and go to state 85
    '>'                   shift, and go to state 86
    T_GREATER_THAN_EQUAL  shift, and go to state 87
    '<'                   shift, and go to state 88
    T_LESS_THAN_EQUAL     shift, and go to state 89
    '+'                   shift, and go to state 90
    '-'                   shift, and go to state 91
    '*'                   shift, and go to state 92
    '/'                   shift, and go to state 93
    '%'                   shift, and go to state 94

    $default  reduce using rule 64 (expr)


State 142

   28 args: type identifier ',' . args

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 98
    basic  go to state 15
    args   go to state 148


State 143

   83 array: '[' T_DEC_INT ']' array .

    $default  reduce using rule 83 (array)


State 144

   80 array: '[' ID ']' array .

    $default  reduce using rule 80 (array)


State 145

   49 block_stmt: T_FOR '(' S1 ';' Marker_If . S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    S1           go to state 149
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 146

   47 block_stmt: T_IF '(' expr ')' brac_open . Marker_If M brac_close
   48           | T_IF '(' expr ')' brac_open . Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 150
    epsilon    go to state 21


State 147

   50 block_stmt: T_WHILE Marker_If '(' S1 ')' . brac_open Marker_If M brac_close

    '{'  shift, and go to state 36

    brac_open  go to state 151


State 148

   28 args: type identifier ',' args .

    $default  reduce using rule 28 (args)


State 149

   49 block_stmt: T_FOR '(' S1 ';' Marker_If S1 . ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    ';'  shift, and go to state 152


State 150

   47 block_stmt: T_IF '(' expr ')' brac_open Marker_If . M brac_close
   48           | T_IF '(' expr ')' brac_open Marker_If . M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    M            go to state 153
    S            go to state 78
    S1           go to state 49
    block_stmt   go to state 50
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 151

   50 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open . Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 154
    epsilon    go to state 21


State 152

   49 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' . Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 155
    epsilon    go to state 21


State 153

   34 M: M . Marker_If S
   47 block_stmt: T_IF '(' expr ')' brac_open Marker_If M . brac_close
   48           | T_IF '(' expr ')' brac_open Marker_If M . brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    '}'  shift, and go to state 110

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 111
    epsilon     go to state 21
    brac_close  go to state 156


State 154

   50 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    M            go to state 157
    S            go to state 78
    S1           go to state 49
    block_stmt   go to state 50
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 155

   49 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If . S1 Marker_For ')' brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    S1           go to state 158
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 156

   47 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close .
   48           | T_IF '(' expr ')' brac_open Marker_If M brac_close . Marker_Else T_ELSE brac_open Marker_If M brac_close

    T_ELSE    reduce using rule 4 (epsilon)
    $default  reduce using rule 47 (block_stmt)

    Marker_Else  go to state 159
    epsilon      go to state 160


State 157

   34 M: M . Marker_If S
   50 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If M . brac_close

    '}'  shift, and go to state 110

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 111
    epsilon     go to state 21
    brac_close  go to state 161


State 158

   49 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 . Marker_For ')' brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_For  go to state 162
    epsilon     go to state 163


State 159

   48 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else . T_ELSE brac_open Marker_If M brac_close

    T_ELSE  shift, and go to state 164


State 160

    2 Marker_Else: epsilon .

    $default  reduce using rule 2 (Marker_Else)


State 161

   50 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If M brac_close .

    $default  reduce using rule 50 (block_stmt)


State 162

   49 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For . ')' brac_open Marker_If M brac_close

    ')'  shift, and go to state 165


State 163

    3 Marker_For: epsilon .

    $default  reduce using rule 3 (Marker_For)


State 164

   48 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE . brac_open Marker_If M brac_close

    '{'  shift, and go to state 36

    brac_open  go to state 166


State 165

   49 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' . brac_open Marker_If M brac_close

    '{'  shift, and go to state 36

    brac_open  go to state 167


State 166

   48 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open . Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 168
    epsilon    go to state 21


State 167

   49 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open . Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 169
    epsilon    go to state 21


State 168

   48 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    M            go to state 170
    S            go to state 78
    S1           go to state 49
    block_stmt   go to state 50
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 169

   49 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 34
    T_DEC_INT    shift, and go to state 35
    ID           shift, and go to state 22
    T_MAIN       shift, and go to state 23
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39
    '*'          shift, and go to state 40
    '!'          shift, and go to state 41
    "true"       shift, and go to state 42
    "false"      shift, and go to state 43

    type         go to state 44
    basic        go to state 15
    func         go to state 45
    M            go to state 171
    S            go to state 78
    S1           go to state 49
    block_stmt   go to state 50
    expr         go to state 51
    assign_stmt  go to state 52
    number       go to state 53
    identifier   go to state 54


State 170

   34 M: M . Marker_If S
   48 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M . brac_close

    '}'  shift, and go to state 110

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 111
    epsilon     go to state 21
    brac_close  go to state 172


State 171

   34 M: M . Marker_If S
   49 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M . brac_close

    '}'  shift, and go to state 110

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 111
    epsilon     go to state 21
    brac_close  go to state 173


State 172

   48 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close .

    $default  reduce using rule 48 (block_stmt)


State 173

   49 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close .

    $default  reduce using rule 49 (block_stmt)
