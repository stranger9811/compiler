Terminals unused in grammar

   T_BREAK
   T_CONTINUE
   T_GOTO
   T_SCANF
   T_SIZEOF
   T_UNSIGNED
   T_SIGNED
   T_CONST
   T_SHORT
   T_EXTERN
   T_LONG
   T_APOS
   T_STRING
   T_IO_INT
   T_IO_LONG_LONG
   T_IO_STRING
   T_IO_FLOAT
   T_DIVIDE_SELF
   T_MULT_SELF
   T_MINUS_SELF
   T_PLUS_SELF
   '|'
   '^'
   '&'
   T_SUB_ONE
   T_ADD_ONE
   T_THIS_POINTER
   '.'


Grammar

    0 $accept: code1 $end

    1 Marker_If: epsilon

    2 Marker_Else: epsilon

    3 Marker_For: epsilon

    4 epsilon: /* empty */

    5 code1: code

    6 code: decl Marker_If code
    7     | decl

    8 decl: type identifier ';'
    9     | T_TYPEDEF type ID ';'

   10 $@1: /* empty */

   11 decl: type func $@1 '{' M brac_close

   12 $@2: /* empty */

   13 decl: void func $@2 '{' M brac_close
   14     | T_STRUCT ID block ';'
   15     | T_HEADER

   16 type: type '*'
   17     | basic

   18 basic: T_LONG_LONG
   19      | T_INT
   20      | T_CHAR
   21      | T_FLOAT
   22      | T_DOUBLE
   23      | T_BOOL

   24 void: void '*'
   25     | T_VOID

   26 func: ID circl_brac_open args ')'
   27     | ID '(' ')'

   28 $@3: /* empty */

   29 func: T_MAIN $@3 circl_brac_open ')'

   30 args: args ',' type identifier
   31     | type identifier

   32 brac_open: '{'

   33 brac_close: '}'

   34 block: brac_open M brac_close
   35      | S

   36 M: M Marker_If S
   37  | S

   38 S: S1 ';'
   39  | block_stmt
   40  | ';'

   41 exprlist: exprlist ',' expr
   42         | expr
   43         | epsilon

   44 S1: expr ',' Marker_If S1
   45   | expr

   46 $@4: /* empty */

   47 S1: type $@4 init
   48   | T_RETURN expr
   49   | T_RETURN
   50   | T_PRINT_INT expr

   51 init: assign_stmt ',' init
   52     | identifier ',' init
   53     | assign_stmt
   54     | identifier

   55 circl_brac_open: '('

   56 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close
   57           | T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close
   58           | T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close
   59           | T_WHILE Marker_If '(' S1 ')' brac_open Marker_If M brac_close

   60 expr: expr '+' expr
   61     | ID '(' exprlist ')'
   62     | expr T_EQUAL_TEST expr
   63     | expr '<' expr
   64     | expr '>' expr
   65     | expr T_LESS_THAN_EQUAL expr
   66     | expr T_GREATER_THAN_EQUAL expr
   67     | expr T_NOT_EQUAL expr
   68     | assign_stmt
   69     | expr '-' expr
   70     | expr '*' expr
   71     | expr '/' expr
   72     | expr '%' expr
   73     | expr T_AND Marker_If expr
   74     | expr T_OR Marker_If expr
   75     | '!' expr
   76     | '(' expr ')'
   77     | identifier
   78     | '+' expr
   79     | '-' expr
   80     | number
   81     | '*' expr
   82     | "true"
   83     | "false"

   84 assign_stmt: identifier '=' expr

   85 number: T_DEC_INT
   86       | T_DEC_FLOAT

   87 identifier: ID
   88           | ID array

   89 array: '[' ID ']' array
   90      | '[' ID ']'
   91      | '[' T_DEC_INT ']'
   92      | '[' T_DEC_INT ']' array


Terminals, with rules where they appear

$end (0) 0
'!' (33) 75
'%' (37) 72
'&' (38)
'(' (40) 27 55 56 57 58 59 61 76
')' (41) 26 27 29 56 57 58 59 61 76
'*' (42) 16 24 70 81
'+' (43) 60 78
',' (44) 30 41 44 51 52
'-' (45) 69 79
'.' (46)
'/' (47) 71
';' (59) 8 9 14 38 40 58
'<' (60) 63
'=' (61) 84
'>' (62) 64
'[' (91) 89 90 91 92
']' (93) 89 90 91 92
'^' (94)
'{' (123) 11 13 32
'|' (124)
'}' (125) 33
error (256)
T_STRUCT (258) 14
T_BREAK (259)
T_CONTINUE (260)
T_TYPEDEF (261) 9
T_CHAR (262) 20
T_DOUBLE (263) 22
T_INT (264) 19
T_FLOAT (265) 21
T_LONG_LONG (266) 18
T_FOR (267) 58
T_IF (268) 56 57
T_ELSE (269) 57
T_WHILE (270) 59
T_GOTO (271)
T_RETURN (272) 48 49
T_PRINT_INT (273) 50
T_VOID (274) 25
T_SCANF (275)
T_SIZEOF (276)
T_UNSIGNED (277)
T_SIGNED (278)
T_CONST (279)
T_SHORT (280)
T_EXTERN (281)
T_LONG (282)
T_BOOL (283) 23
T_APOS (284)
T_DEC_FLOAT (285) 86
T_DEC_INT (286) 85 91 92
T_STRING (287)
T_HEADER (288) 15
ID (289) 9 14 26 27 61 87 88 89 90
T_MAIN (290) 29
T_IO_INT (291)
T_IO_LONG_LONG (292)
T_IO_STRING (293)
T_IO_FLOAT (294)
T_DIVIDE_SELF (295)
T_MULT_SELF (296)
T_MINUS_SELF (297)
T_PLUS_SELF (298)
T_OR (299) 74
T_AND (300) 73
T_NOT_EQUAL (301) 67
T_EQUAL_TEST (302) 62
T_GREATER_THAN_EQUAL (303) 66
T_LESS_THAN_EQUAL (304) 65
DEREF (305)
UMINUS (306)
UPLUS (307)
T_SUB_ONE (308)
T_ADD_ONE (309)
T_THIS_POINTER (310)
"true" (311) 82
"false" (312) 83


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
Marker_If (80)
    on left: 1, on right: 6 36 44 56 57 58 59 73 74
Marker_Else (81)
    on left: 2, on right: 57
Marker_For (82)
    on left: 3, on right: 58
epsilon (83)
    on left: 4, on right: 1 2 3 43
code1 (84)
    on left: 5, on right: 0
code (85)
    on left: 6 7, on right: 5 6
decl (86)
    on left: 8 9 11 13 14 15, on right: 6 7
$@1 (87)
    on left: 10, on right: 11
$@2 (88)
    on left: 12, on right: 13
type (89)
    on left: 16 17, on right: 8 9 11 16 30 31 47
basic (90)
    on left: 18 19 20 21 22 23, on right: 17
void (91)
    on left: 24 25, on right: 13 24
func (92)
    on left: 26 27 29, on right: 11 13
$@3 (93)
    on left: 28, on right: 29
args (94)
    on left: 30 31, on right: 26 30
brac_open (95)
    on left: 32, on right: 34 56 57 58 59
brac_close (96)
    on left: 33, on right: 11 13 34 56 57 58 59
block (97)
    on left: 34 35, on right: 14
M (98)
    on left: 36 37, on right: 11 13 34 36 56 57 58 59
S (99)
    on left: 38 39 40, on right: 35 36 37
exprlist (100)
    on left: 41 42 43, on right: 41 61
S1 (101)
    on left: 44 45 47 48 49 50, on right: 38 44 58 59
$@4 (102)
    on left: 46, on right: 47
init (103)
    on left: 51 52 53 54, on right: 47 51 52
circl_brac_open (104)
    on left: 55, on right: 26 29
block_stmt (105)
    on left: 56 57 58 59, on right: 39
expr (106)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
    78 79 80 81 82 83, on right: 41 42 44 45 48 50 56 57 60 62 63 64
    65 66 67 69 70 71 72 73 74 75 76 78 79 81 84
assign_stmt (107)
    on left: 84, on right: 51 53 68
number (108)
    on left: 85 86, on right: 80
identifier (109)
    on left: 87 88, on right: 8 30 31 52 54 77 84
array (110)
    on left: 89 90 91 92, on right: 88 89 92


State 0

    0 $accept: . code1 $end

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    code1  go to state 11
    code   go to state 12
    decl   go to state 13
    type   go to state 14
    basic  go to state 15
    void   go to state 16


State 1

   14 decl: T_STRUCT . ID block ';'

    ID  shift, and go to state 17


State 2

    9 decl: T_TYPEDEF . type ID ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 18
    basic  go to state 15


State 3

   20 basic: T_CHAR .

    $default  reduce using rule 20 (basic)


State 4

   22 basic: T_DOUBLE .

    $default  reduce using rule 22 (basic)


State 5

   19 basic: T_INT .

    $default  reduce using rule 19 (basic)


State 6

   21 basic: T_FLOAT .

    $default  reduce using rule 21 (basic)


State 7

   18 basic: T_LONG_LONG .

    $default  reduce using rule 18 (basic)


State 8

   25 void: T_VOID .

    $default  reduce using rule 25 (void)


State 9

   23 basic: T_BOOL .

    $default  reduce using rule 23 (basic)


State 10

   15 decl: T_HEADER .

    $default  reduce using rule 15 (decl)


State 11

    0 $accept: code1 . $end

    $end  shift, and go to state 19


State 12

    5 code1: code .

    $default  reduce using rule 5 (code1)


State 13

    6 code: decl . Marker_If code
    7     | decl .

    $end      reduce using rule 7 (code)
    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 20
    epsilon    go to state 21


State 14

    8 decl: type . identifier ';'
   11     | type . func $@1 '{' M brac_close
   16 type: type . '*'

    ID      shift, and go to state 22
    T_MAIN  shift, and go to state 23
    '*'     shift, and go to state 24

    func        go to state 25
    identifier  go to state 26


State 15

   17 type: basic .

    $default  reduce using rule 17 (type)


State 16

   13 decl: void . func $@2 '{' M brac_close
   24 void: void . '*'

    ID      shift, and go to state 27
    T_MAIN  shift, and go to state 23
    '*'     shift, and go to state 28

    func  go to state 29


State 17

   14 decl: T_STRUCT ID . block ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '{'          shift, and go to state 38
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    brac_open    go to state 48
    block        go to state 49
    S            go to state 50
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 18

    9 decl: T_TYPEDEF type . ID ';'
   16 type: type . '*'

    ID   shift, and go to state 57
    '*'  shift, and go to state 24


State 19

    0 $accept: code1 $end .

    $default  accept


State 20

    6 code: decl Marker_If . code

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    code   go to state 58
    decl   go to state 13
    type   go to state 14
    basic  go to state 15
    void   go to state 16


State 21

    1 Marker_If: epsilon .

    $default  reduce using rule 1 (Marker_If)


State 22

   26 func: ID . circl_brac_open args ')'
   27     | ID . '(' ')'
   87 identifier: ID .
   88           | ID . array

    '('  shift, and go to state 59
    '['  shift, and go to state 60

    $default  reduce using rule 87 (identifier)

    circl_brac_open  go to state 61
    array            go to state 62


State 23

   29 func: T_MAIN . $@3 circl_brac_open ')'

    $default  reduce using rule 28 ($@3)

    $@3  go to state 63


State 24

   16 type: type '*' .

    $default  reduce using rule 16 (type)


State 25

   11 decl: type func . $@1 '{' M brac_close

    $default  reduce using rule 10 ($@1)

    $@1  go to state 64


State 26

    8 decl: type identifier . ';'

    ';'  shift, and go to state 65


State 27

   26 func: ID . circl_brac_open args ')'
   27     | ID . '(' ')'

    '('  shift, and go to state 59

    circl_brac_open  go to state 61


State 28

   24 void: void '*' .

    $default  reduce using rule 24 (void)


State 29

   13 decl: void func . $@2 '{' M brac_close

    $default  reduce using rule 12 ($@2)

    $@2  go to state 66


State 30

   58 block_stmt: T_FOR . '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    '('  shift, and go to state 67


State 31

   56 block_stmt: T_IF . '(' expr ')' brac_open Marker_If M brac_close
   57           | T_IF . '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    '('  shift, and go to state 68


State 32

   59 block_stmt: T_WHILE . Marker_If '(' S1 ')' brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 69
    epsilon    go to state 21


State 33

   48 S1: T_RETURN . expr
   49   | T_RETURN .

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    $default  reduce using rule 49 (S1)

    expr         go to state 70
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 34

   50 S1: T_PRINT_INT . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 71
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 35

   86 number: T_DEC_FLOAT .

    $default  reduce using rule 86 (number)


State 36

   85 number: T_DEC_INT .

    $default  reduce using rule 85 (number)


State 37

   61 expr: ID . '(' exprlist ')'
   87 identifier: ID .
   88           | ID . array

    '('  shift, and go to state 72
    '['  shift, and go to state 60

    $default  reduce using rule 87 (identifier)

    array  go to state 62


State 38

   32 brac_open: '{' .

    $default  reduce using rule 32 (brac_open)


State 39

   76 expr: '(' . expr ')'

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 73
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 40

   78 expr: '+' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 74
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 41

   79 expr: '-' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 75
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 42

   81 expr: '*' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 76
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 43

   75 expr: '!' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 77
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 44

   40 S: ';' .

    $default  reduce using rule 40 (S)


State 45

   82 expr: "true" .

    $default  reduce using rule 82 (expr)


State 46

   83 expr: "false" .

    $default  reduce using rule 83 (expr)


State 47

   16 type: type . '*'
   47 S1: type . $@4 init

    '*'  shift, and go to state 24

    $default  reduce using rule 46 ($@4)

    $@4  go to state 78


State 48

   34 block: brac_open . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 79
    S            go to state 80
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 49

   14 decl: T_STRUCT ID block . ';'

    ';'  shift, and go to state 81


State 50

   35 block: S .

    $default  reduce using rule 35 (block)


State 51

   38 S: S1 . ';'

    ';'  shift, and go to state 82


State 52

   39 S: block_stmt .

    $default  reduce using rule 39 (S)


State 53

   44 S1: expr . ',' Marker_If S1
   45   | expr .
   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    ','                   shift, and go to state 83
    T_OR                  shift, and go to state 84
    T_AND                 shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    T_EQUAL_TEST          shift, and go to state 87
    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96

    $default  reduce using rule 45 (S1)


State 54

   68 expr: assign_stmt .

    $default  reduce using rule 68 (expr)


State 55

   80 expr: number .

    $default  reduce using rule 80 (expr)


State 56

   77 expr: identifier .
   84 assign_stmt: identifier . '=' expr

    '='  shift, and go to state 97

    $default  reduce using rule 77 (expr)


State 57

    9 decl: T_TYPEDEF type ID . ';'

    ';'  shift, and go to state 98


State 58

    6 code: decl Marker_If code .

    $default  reduce using rule 6 (code)


State 59

   27 func: ID '(' . ')'
   55 circl_brac_open: '(' .

    ')'  shift, and go to state 99

    $default  reduce using rule 55 (circl_brac_open)


State 60

   89 array: '[' . ID ']' array
   90      | '[' . ID ']'
   91      | '[' . T_DEC_INT ']'
   92      | '[' . T_DEC_INT ']' array

    T_DEC_INT  shift, and go to state 100
    ID         shift, and go to state 101


State 61

   26 func: ID circl_brac_open . args ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 102
    basic  go to state 15
    args   go to state 103


State 62

   88 identifier: ID array .

    $default  reduce using rule 88 (identifier)


State 63

   29 func: T_MAIN $@3 . circl_brac_open ')'

    '('  shift, and go to state 104

    circl_brac_open  go to state 105


State 64

   11 decl: type func $@1 . '{' M brac_close

    '{'  shift, and go to state 106


State 65

    8 decl: type identifier ';' .

    $default  reduce using rule 8 (decl)


State 66

   13 decl: void func $@2 . '{' M brac_close

    '{'  shift, and go to state 107


State 67

   58 block_stmt: T_FOR '(' . S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S1           go to state 108
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 68

   56 block_stmt: T_IF '(' . expr ')' brac_open Marker_If M brac_close
   57           | T_IF '(' . expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 109
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 69

   59 block_stmt: T_WHILE Marker_If . '(' S1 ')' brac_open Marker_If M brac_close

    '('  shift, and go to state 110


State 70

   48 S1: T_RETURN expr .
   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 84
    T_AND                 shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    T_EQUAL_TEST          shift, and go to state 87
    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96

    $default  reduce using rule 48 (S1)


State 71

   50 S1: T_PRINT_INT expr .
   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 84
    T_AND                 shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    T_EQUAL_TEST          shift, and go to state 87
    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96

    $default  reduce using rule 50 (S1)


State 72

   61 expr: ID '(' . exprlist ')'

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    $default  reduce using rule 4 (epsilon)

    epsilon      go to state 111
    exprlist     go to state 112
    expr         go to state 113
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 73

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr
   76     | '(' expr . ')'

    T_OR                  shift, and go to state 84
    T_AND                 shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    T_EQUAL_TEST          shift, and go to state 87
    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96
    ')'                   shift, and go to state 114


State 74

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr
   78     | '+' expr .

    $default  reduce using rule 78 (expr)


State 75

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr
   79     | '-' expr .

    $default  reduce using rule 79 (expr)


State 76

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr
   81     | '*' expr .

    $default  reduce using rule 81 (expr)


State 77

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr
   75     | '!' expr .

    $default  reduce using rule 75 (expr)


State 78

   47 S1: type $@4 . init

    ID  shift, and go to state 115

    init         go to state 116
    assign_stmt  go to state 117
    identifier   go to state 118


State 79

   34 block: brac_open M . brac_close
   36 M: M . Marker_If S

    '}'  shift, and go to state 119

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 120
    epsilon     go to state 21
    brac_close  go to state 121


State 80

   37 M: S .

    $default  reduce using rule 37 (M)


State 81

   14 decl: T_STRUCT ID block ';' .

    $default  reduce using rule 14 (decl)


State 82

   38 S: S1 ';' .

    $default  reduce using rule 38 (S)


State 83

   44 S1: expr ',' . Marker_If S1

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 122
    epsilon    go to state 21


State 84

   74 expr: expr T_OR . Marker_If expr

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 123
    epsilon    go to state 21


State 85

   73 expr: expr T_AND . Marker_If expr

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 124
    epsilon    go to state 21


State 86

   67 expr: expr T_NOT_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 125
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 87

   62 expr: expr T_EQUAL_TEST . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 126
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 88

   64 expr: expr '>' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 127
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 89

   66 expr: expr T_GREATER_THAN_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 128
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 90

   63 expr: expr '<' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 129
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 91

   65 expr: expr T_LESS_THAN_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 130
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 92

   60 expr: expr '+' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 131
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 93

   69 expr: expr '-' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 132
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 94

   70 expr: expr '*' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 133
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 95

   71 expr: expr '/' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 134
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 96

   72 expr: expr '%' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 135
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 97

   84 assign_stmt: identifier '=' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 136
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 98

    9 decl: T_TYPEDEF type ID ';' .

    $default  reduce using rule 9 (decl)


State 99

   27 func: ID '(' ')' .

    $default  reduce using rule 27 (func)


State 100

   91 array: '[' T_DEC_INT . ']'
   92      | '[' T_DEC_INT . ']' array

    ']'  shift, and go to state 137


State 101

   89 array: '[' ID . ']' array
   90      | '[' ID . ']'

    ']'  shift, and go to state 138


State 102

   16 type: type . '*'
   31 args: type . identifier

    ID   shift, and go to state 115
    '*'  shift, and go to state 24

    identifier  go to state 139


State 103

   26 func: ID circl_brac_open args . ')'
   30 args: args . ',' type identifier

    ','  shift, and go to state 140
    ')'  shift, and go to state 141


State 104

   55 circl_brac_open: '(' .

    $default  reduce using rule 55 (circl_brac_open)


State 105

   29 func: T_MAIN $@3 circl_brac_open . ')'

    ')'  shift, and go to state 142


State 106

   11 decl: type func $@1 '{' . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 143
    S            go to state 80
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 107

   13 decl: void func $@2 '{' . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 144
    S            go to state 80
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 108

   58 block_stmt: T_FOR '(' S1 . ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    ';'  shift, and go to state 145


State 109

   56 block_stmt: T_IF '(' expr . ')' brac_open Marker_If M brac_close
   57           | T_IF '(' expr . ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close
   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 84
    T_AND                 shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    T_EQUAL_TEST          shift, and go to state 87
    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96
    ')'                   shift, and go to state 146


State 110

   59 block_stmt: T_WHILE Marker_If '(' . S1 ')' brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S1           go to state 147
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 111

   43 exprlist: epsilon .

    $default  reduce using rule 43 (exprlist)


State 112

   41 exprlist: exprlist . ',' expr
   61 expr: ID '(' exprlist . ')'

    ','  shift, and go to state 148
    ')'  shift, and go to state 149


State 113

   42 exprlist: expr .
   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 84
    T_AND                 shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    T_EQUAL_TEST          shift, and go to state 87
    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96

    $default  reduce using rule 42 (exprlist)


State 114

   76 expr: '(' expr ')' .

    $default  reduce using rule 76 (expr)


State 115

   87 identifier: ID .
   88           | ID . array

    '['  shift, and go to state 60

    $default  reduce using rule 87 (identifier)

    array  go to state 62


State 116

   47 S1: type $@4 init .

    $default  reduce using rule 47 (S1)


State 117

   51 init: assign_stmt . ',' init
   53     | assign_stmt .

    ','  shift, and go to state 150

    $default  reduce using rule 53 (init)


State 118

   52 init: identifier . ',' init
   54     | identifier .
   84 assign_stmt: identifier . '=' expr

    ','  shift, and go to state 151
    '='  shift, and go to state 97

    $default  reduce using rule 54 (init)


State 119

   33 brac_close: '}' .

    $default  reduce using rule 33 (brac_close)


State 120

   36 M: M Marker_If . S

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S            go to state 152
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 121

   34 block: brac_open M brac_close .

    $default  reduce using rule 34 (block)


State 122

   44 S1: expr ',' Marker_If . S1

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S1           go to state 153
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 123

   74 expr: expr T_OR Marker_If . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 154
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 124

   73 expr: expr T_AND Marker_If . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 155
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 125

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   67     | expr T_NOT_EQUAL expr .
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96

    $default  reduce using rule 67 (expr)


State 126

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   62     | expr T_EQUAL_TEST expr .
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96

    $default  reduce using rule 62 (expr)


State 127

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   64     | expr '>' expr .
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    '<'                shift, and go to state 90
    T_LESS_THAN_EQUAL  shift, and go to state 91
    '+'                shift, and go to state 92
    '-'                shift, and go to state 93
    '*'                shift, and go to state 94
    '/'                shift, and go to state 95
    '%'                shift, and go to state 96

    $default  reduce using rule 64 (expr)


State 128

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   66     | expr T_GREATER_THAN_EQUAL expr .
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    '<'                shift, and go to state 90
    T_LESS_THAN_EQUAL  shift, and go to state 91
    '+'                shift, and go to state 92
    '-'                shift, and go to state 93
    '*'                shift, and go to state 94
    '/'                shift, and go to state 95
    '%'                shift, and go to state 96

    $default  reduce using rule 66 (expr)


State 129

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   63     | expr '<' expr .
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 63 (expr)


State 130

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   65     | expr T_LESS_THAN_EQUAL expr .
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 65 (expr)


State 131

   60 expr: expr . '+' expr
   60     | expr '+' expr .
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 60 (expr)


State 132

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   69     | expr '-' expr .
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 69 (expr)


State 133

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   70     | expr '*' expr .
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    $default  reduce using rule 70 (expr)


State 134

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   71     | expr '/' expr .
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    $default  reduce using rule 71 (expr)


State 135

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   72     | expr '%' expr .
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    $default  reduce using rule 72 (expr)


State 136

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr
   84 assign_stmt: identifier '=' expr .

    T_OR                  shift, and go to state 84
    T_AND                 shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    T_EQUAL_TEST          shift, and go to state 87
    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96

    $default  reduce using rule 84 (assign_stmt)


State 137

   91 array: '[' T_DEC_INT ']' .
   92      | '[' T_DEC_INT ']' . array

    '['  shift, and go to state 60

    $default  reduce using rule 91 (array)

    array  go to state 156


State 138

   89 array: '[' ID ']' . array
   90      | '[' ID ']' .

    '['  shift, and go to state 60

    $default  reduce using rule 90 (array)

    array  go to state 157


State 139

   31 args: type identifier .

    $default  reduce using rule 31 (args)


State 140

   30 args: args ',' . type identifier

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 158
    basic  go to state 15


State 141

   26 func: ID circl_brac_open args ')' .

    $default  reduce using rule 26 (func)


State 142

   29 func: T_MAIN $@3 circl_brac_open ')' .

    $default  reduce using rule 29 (func)


State 143

   11 decl: type func $@1 '{' M . brac_close
   36 M: M . Marker_If S

    '}'  shift, and go to state 119

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 120
    epsilon     go to state 21
    brac_close  go to state 159


State 144

   13 decl: void func $@2 '{' M . brac_close
   36 M: M . Marker_If S

    '}'  shift, and go to state 119

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 120
    epsilon     go to state 21
    brac_close  go to state 160


State 145

   58 block_stmt: T_FOR '(' S1 ';' . Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 161
    epsilon    go to state 21


State 146

   56 block_stmt: T_IF '(' expr ')' . brac_open Marker_If M brac_close
   57           | T_IF '(' expr ')' . brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    '{'  shift, and go to state 38

    brac_open  go to state 162


State 147

   59 block_stmt: T_WHILE Marker_If '(' S1 . ')' brac_open Marker_If M brac_close

    ')'  shift, and go to state 163


State 148

   41 exprlist: exprlist ',' . expr

    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    expr         go to state 164
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 149

   61 expr: ID '(' exprlist ')' .

    $default  reduce using rule 61 (expr)


State 150

   51 init: assign_stmt ',' . init

    ID  shift, and go to state 115

    init         go to state 165
    assign_stmt  go to state 117
    identifier   go to state 118


State 151

   52 init: identifier ',' . init

    ID  shift, and go to state 115

    init         go to state 166
    assign_stmt  go to state 117
    identifier   go to state 118


State 152

   36 M: M Marker_If S .

    $default  reduce using rule 36 (M)


State 153

   44 S1: expr ',' Marker_If S1 .

    $default  reduce using rule 44 (S1)


State 154

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr
   74     | expr T_OR Marker_If expr .

    T_AND                 shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    T_EQUAL_TEST          shift, and go to state 87
    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96

    $default  reduce using rule 74 (expr)


State 155

   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   73     | expr T_AND Marker_If expr .
   74     | expr . T_OR Marker_If expr

    T_NOT_EQUAL           shift, and go to state 86
    T_EQUAL_TEST          shift, and go to state 87
    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96

    $default  reduce using rule 73 (expr)


State 156

   92 array: '[' T_DEC_INT ']' array .

    $default  reduce using rule 92 (array)


State 157

   89 array: '[' ID ']' array .

    $default  reduce using rule 89 (array)


State 158

   16 type: type . '*'
   30 args: args ',' type . identifier

    ID   shift, and go to state 115
    '*'  shift, and go to state 24

    identifier  go to state 167


State 159

   11 decl: type func $@1 '{' M brac_close .

    $default  reduce using rule 11 (decl)


State 160

   13 decl: void func $@2 '{' M brac_close .

    $default  reduce using rule 13 (decl)


State 161

   58 block_stmt: T_FOR '(' S1 ';' Marker_If . S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S1           go to state 168
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 162

   56 block_stmt: T_IF '(' expr ')' brac_open . Marker_If M brac_close
   57           | T_IF '(' expr ')' brac_open . Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 169
    epsilon    go to state 21


State 163

   59 block_stmt: T_WHILE Marker_If '(' S1 ')' . brac_open Marker_If M brac_close

    '{'  shift, and go to state 38

    brac_open  go to state 170


State 164

   41 exprlist: exprlist ',' expr .
   60 expr: expr . '+' expr
   62     | expr . T_EQUAL_TEST expr
   63     | expr . '<' expr
   64     | expr . '>' expr
   65     | expr . T_LESS_THAN_EQUAL expr
   66     | expr . T_GREATER_THAN_EQUAL expr
   67     | expr . T_NOT_EQUAL expr
   69     | expr . '-' expr
   70     | expr . '*' expr
   71     | expr . '/' expr
   72     | expr . '%' expr
   73     | expr . T_AND Marker_If expr
   74     | expr . T_OR Marker_If expr

    T_OR                  shift, and go to state 84
    T_AND                 shift, and go to state 85
    T_NOT_EQUAL           shift, and go to state 86
    T_EQUAL_TEST          shift, and go to state 87
    '>'                   shift, and go to state 88
    T_GREATER_THAN_EQUAL  shift, and go to state 89
    '<'                   shift, and go to state 90
    T_LESS_THAN_EQUAL     shift, and go to state 91
    '+'                   shift, and go to state 92
    '-'                   shift, and go to state 93
    '*'                   shift, and go to state 94
    '/'                   shift, and go to state 95
    '%'                   shift, and go to state 96

    $default  reduce using rule 41 (exprlist)


State 165

   51 init: assign_stmt ',' init .

    $default  reduce using rule 51 (init)


State 166

   52 init: identifier ',' init .

    $default  reduce using rule 52 (init)


State 167

   30 args: args ',' type identifier .

    $default  reduce using rule 30 (args)


State 168

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 . ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    ';'  shift, and go to state 171


State 169

   56 block_stmt: T_IF '(' expr ')' brac_open Marker_If . M brac_close
   57           | T_IF '(' expr ')' brac_open Marker_If . M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 172
    S            go to state 80
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 170

   59 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open . Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 173
    epsilon    go to state 21


State 171

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' . Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 174
    epsilon    go to state 21


State 172

   36 M: M . Marker_If S
   56 block_stmt: T_IF '(' expr ')' brac_open Marker_If M . brac_close
   57           | T_IF '(' expr ')' brac_open Marker_If M . brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close

    '}'  shift, and go to state 119

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 120
    epsilon     go to state 21
    brac_close  go to state 175


State 173

   59 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 176
    S            go to state 80
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 174

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If . S1 Marker_For ')' brac_open Marker_If M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    S1           go to state 177
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 175

   56 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close .
   57           | T_IF '(' expr ')' brac_open Marker_If M brac_close . Marker_Else T_ELSE brac_open Marker_If M brac_close

    T_ELSE    reduce using rule 4 (epsilon)
    $default  reduce using rule 56 (block_stmt)

    Marker_Else  go to state 178
    epsilon      go to state 179


State 176

   36 M: M . Marker_If S
   59 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If M . brac_close

    '}'  shift, and go to state 119

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 120
    epsilon     go to state 21
    brac_close  go to state 180


State 177

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 . Marker_For ')' brac_open Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_For  go to state 181
    epsilon     go to state 182


State 178

   57 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else . T_ELSE brac_open Marker_If M brac_close

    T_ELSE  shift, and go to state 183


State 179

    2 Marker_Else: epsilon .

    $default  reduce using rule 2 (Marker_Else)


State 180

   59 block_stmt: T_WHILE Marker_If '(' S1 ')' brac_open Marker_If M brac_close .

    $default  reduce using rule 59 (block_stmt)


State 181

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For . ')' brac_open Marker_If M brac_close

    ')'  shift, and go to state 184


State 182

    3 Marker_For: epsilon .

    $default  reduce using rule 3 (Marker_For)


State 183

   57 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE . brac_open Marker_If M brac_close

    '{'  shift, and go to state 38

    brac_open  go to state 185


State 184

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' . brac_open Marker_If M brac_close

    '{'  shift, and go to state 38

    brac_open  go to state 186


State 185

   57 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open . Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 187
    epsilon    go to state 21


State 186

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open . Marker_If M brac_close

    $default  reduce using rule 4 (epsilon)

    Marker_If  go to state 188
    epsilon    go to state 21


State 187

   57 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 189
    S            go to state 80
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 188

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 30
    T_IF         shift, and go to state 31
    T_WHILE      shift, and go to state 32
    T_RETURN     shift, and go to state 33
    T_PRINT_INT  shift, and go to state 34
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 35
    T_DEC_INT    shift, and go to state 36
    ID           shift, and go to state 37
    '('          shift, and go to state 39
    '+'          shift, and go to state 40
    '-'          shift, and go to state 41
    '*'          shift, and go to state 42
    '!'          shift, and go to state 43
    ';'          shift, and go to state 44
    "true"       shift, and go to state 45
    "false"      shift, and go to state 46

    type         go to state 47
    basic        go to state 15
    M            go to state 190
    S            go to state 80
    S1           go to state 51
    block_stmt   go to state 52
    expr         go to state 53
    assign_stmt  go to state 54
    number       go to state 55
    identifier   go to state 56


State 189

   36 M: M . Marker_If S
   57 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M . brac_close

    '}'  shift, and go to state 119

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 120
    epsilon     go to state 21
    brac_close  go to state 191


State 190

   36 M: M . Marker_If S
   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M . brac_close

    '}'  shift, and go to state 119

    $default  reduce using rule 4 (epsilon)

    Marker_If   go to state 120
    epsilon     go to state 21
    brac_close  go to state 192


State 191

   57 block_stmt: T_IF '(' expr ')' brac_open Marker_If M brac_close Marker_Else T_ELSE brac_open Marker_If M brac_close .

    $default  reduce using rule 57 (block_stmt)


State 192

   58 block_stmt: T_FOR '(' S1 ';' Marker_If S1 ';' Marker_If S1 Marker_For ')' brac_open Marker_If M brac_close .

    $default  reduce using rule 58 (block_stmt)
