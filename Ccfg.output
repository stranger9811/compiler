Terminals unused in grammar

   T_BREAK
   T_CONTINUE
   T_GOTO
   T_PRINTF
   T_SCANF
   T_SIZEOF
   T_UNSIGNED
   T_SIGNED
   T_CONST
   T_SHORT
   T_EXTERN
   T_LONG
   T_APOS
   T_STRING
   T_PLUS_SELF
   T_MINUS_SELF
   T_MULT_SELF
   T_DIVIDE_SELF
   T_THIS_POINTER
   T_ADD_ONE
   T_SUB_ONE
   T_IO_INT
   T_IO_LONG_LONG
   T_IO_STRING
   T_IO_FLOAT
   '|'
   '^'
   '&'
   '.'


Grammar

    0 $accept: code $end

    1 Marker_e: epsilon

    2 epsilon: /* empty */

    3 code: decl code
    4     | decl

    5 decl: type identifier ';'
    6     | T_TYPEDEF type ID ';'
    7     | type func block
    8     | void func block
    9     | T_STRUCT ID block ';'
   10     | T_HEADER

   11 type: type '*'
   12     | basic

   13 basic: T_LONG_LONG
   14      | T_INT
   15      | T_CHAR
   16      | T_FLOAT
   17      | T_DOUBLE
   18      | T_BOOL

   19 void: void '*'
   20     | T_VOID

   21 func: ID '(' args ')'
   22     | ID '(' ')'
   23     | T_MAIN '(' args ')'
   24     | T_MAIN '(' ')'

   25 args: type identifier ',' args
   26     | type identifier

   27 brac_open: '{'

   28 brac_close: '}'

   29 block: brac_open M brac_close
   30      | S

   31 M: S M
   32  | S

   33 S: S1 ';'
   34  | block_stmt

   35 S1: stmt ',' S1
   36   | stmt
   37   | type init
   38   | T_RETURN expr
   39   | T_RETURN

   40 init: assign_stmt ',' init
   41     | identifier ',' init
   42     | assign_stmt
   43     | identifier

   44 block_stmt: T_IF '(' stmt ')' '{' Marker_e M '}'
   45           | T_IF '(' stmt ')' '{' Marker_e M '}' T_ELSE '{' Marker_e M '}'
   46           | T_FOR '(' S1 ';' S1 ';' S1 ')' '{' M '}'
   47           | T_WHILE '(' S1 ')' '{' M '}'

   48 stmt: expr

   49 expr: expr '+' expr
   50     | func
   51     | expr T_EQUAL_TEST expr
   52     | expr '<' expr
   53     | expr '>' expr
   54     | expr T_LESS_THAN_EQUAL expr
   55     | expr T_GREATER_THAN_EQUAL expr
   56     | expr T_NOT_EQUAL expr
   57     | assign_stmt
   58     | expr '-' expr
   59     | expr '*' expr
   60     | expr '/' expr
   61     | expr '%' expr
   62     | expr T_AND Marker_e expr
   63     | expr T_OR Marker_e expr
   64     | '!' expr
   65     | '(' expr ')'
   66     | identifier
   67     | '+' expr
   68     | '-' expr
   69     | number
   70     | '*' expr

   71 assign_stmt: identifier '=' expr

   72 number: T_DEC_INT
   73       | T_DEC_FLOAT

   74 identifier: ID
   75           | ID array

   76 array: '[' ID ']' array
   77      | '[' ID ']'
   78      | '[' T_DEC_INT ']'
   79      | '[' T_DEC_INT ']' array


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'%' (37) 61
'&' (38)
'(' (40) 21 22 23 24 44 45 46 47 65
')' (41) 21 22 23 24 44 45 46 47 65
'*' (42) 11 19 59 70
'+' (43) 49 67
',' (44) 25 35 40 41
'-' (45) 58 68
'.' (46)
'/' (47) 60
';' (59) 5 6 9 33 46
'<' (60) 52
'=' (61) 71
'>' (62) 53
'[' (91) 76 77 78 79
']' (93) 76 77 78 79
'^' (94)
'{' (123) 27 44 45 46 47
'|' (124)
'}' (125) 28 44 45 46 47
error (256)
T_STRUCT (258) 9
T_BREAK (259)
T_CONTINUE (260)
T_TYPEDEF (261) 6
T_CHAR (262) 15
T_DOUBLE (263) 17
T_INT (264) 14
T_FLOAT (265) 16
T_LONG_LONG (266) 13
T_FOR (267) 46
T_IF (268) 44 45
T_ELSE (269) 45
T_WHILE (270) 47
T_GOTO (271)
T_RETURN (272) 38 39
T_PRINTF (273)
T_VOID (274) 20
T_SCANF (275)
T_SIZEOF (276)
T_UNSIGNED (277)
T_SIGNED (278)
T_CONST (279)
T_SHORT (280)
T_EXTERN (281)
T_LONG (282)
T_BOOL (283) 18
T_APOS (284)
T_DEC_FLOAT (285) 73
T_DEC_INT (286) 72 78 79
T_STRING (287)
T_HEADER (288) 10
ID (289) 6 9 21 22 74 75 76 77
T_MAIN (290) 23 24
T_AND (291) 62
T_GREATER_THAN_EQUAL (292) 55
T_LESS_THAN_EQUAL (293) 54
T_EQUAL_TEST (294) 51
T_NOT_EQUAL (295) 56
T_OR (296) 63
T_PLUS_SELF (297)
T_MINUS_SELF (298)
T_MULT_SELF (299)
T_DIVIDE_SELF (300)
T_THIS_POINTER (301)
T_ADD_ONE (302)
T_SUB_ONE (303)
T_IO_INT (304)
T_IO_LONG_LONG (305)
T_IO_STRING (306)
T_IO_FLOAT (307)
DEREF (308)
UMINUS (309)
UPLUS (310)


Nonterminals, with rules where they appear

$accept (77)
    on left: 0
Marker_e (78)
    on left: 1, on right: 44 45 62 63
epsilon (79)
    on left: 2, on right: 1
code (80)
    on left: 3 4, on right: 0 3
decl (81)
    on left: 5 6 7 8 9 10, on right: 3 4
type (82)
    on left: 11 12, on right: 5 6 7 11 25 26 37
basic (83)
    on left: 13 14 15 16 17 18, on right: 12
void (84)
    on left: 19 20, on right: 8 19
func (85)
    on left: 21 22 23 24, on right: 7 8 50
args (86)
    on left: 25 26, on right: 21 23 25
brac_open (87)
    on left: 27, on right: 29
brac_close (88)
    on left: 28, on right: 29
block (89)
    on left: 29 30, on right: 7 8 9
M (90)
    on left: 31 32, on right: 29 31 44 45 46 47
S (91)
    on left: 33 34, on right: 30 31 32
S1 (92)
    on left: 35 36 37 38 39, on right: 33 35 46 47
init (93)
    on left: 40 41 42 43, on right: 37 40 41
block_stmt (94)
    on left: 44 45 46 47, on right: 34
stmt (95)
    on left: 48, on right: 35 36 44 45
expr (96)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    67 68 69 70, on right: 38 48 49 51 52 53 54 55 56 58 59 60 61 62
    63 64 65 67 68 70 71
assign_stmt (97)
    on left: 71, on right: 40 42 57
number (98)
    on left: 72 73, on right: 69
identifier (99)
    on left: 74 75, on right: 5 25 26 41 43 66 71
array (100)
    on left: 76 77 78 79, on right: 75 76 79


State 0

    0 $accept: . code $end

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    code   go to state 11
    decl   go to state 12
    type   go to state 13
    basic  go to state 14
    void   go to state 15


State 1

    9 decl: T_STRUCT . ID block ';'

    ID  shift, and go to state 16


State 2

    6 decl: T_TYPEDEF . type ID ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 17
    basic  go to state 14


State 3

   15 basic: T_CHAR .

    $default  reduce using rule 15 (basic)


State 4

   17 basic: T_DOUBLE .

    $default  reduce using rule 17 (basic)


State 5

   14 basic: T_INT .

    $default  reduce using rule 14 (basic)


State 6

   16 basic: T_FLOAT .

    $default  reduce using rule 16 (basic)


State 7

   13 basic: T_LONG_LONG .

    $default  reduce using rule 13 (basic)


State 8

   20 void: T_VOID .

    $default  reduce using rule 20 (void)


State 9

   18 basic: T_BOOL .

    $default  reduce using rule 18 (basic)


State 10

   10 decl: T_HEADER .

    $default  reduce using rule 10 (decl)


State 11

    0 $accept: code . $end

    $end  shift, and go to state 18


State 12

    3 code: decl . code
    4     | decl .

    T_STRUCT     shift, and go to state 1
    T_TYPEDEF    shift, and go to state 2
    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_VOID       shift, and go to state 8
    T_BOOL       shift, and go to state 9
    T_HEADER     shift, and go to state 10

    $default  reduce using rule 4 (code)

    code   go to state 19
    decl   go to state 12
    type   go to state 13
    basic  go to state 14
    void   go to state 15


State 13

    5 decl: type . identifier ';'
    7     | type . func block
   11 type: type . '*'

    ID      shift, and go to state 20
    T_MAIN  shift, and go to state 21
    '*'     shift, and go to state 22

    func        go to state 23
    identifier  go to state 24


State 14

   12 type: basic .

    $default  reduce using rule 12 (type)


State 15

    8 decl: void . func block
   19 void: void . '*'

    ID      shift, and go to state 25
    T_MAIN  shift, and go to state 21
    '*'     shift, and go to state 26

    func  go to state 27


State 16

    9 decl: T_STRUCT ID . block ';'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '{'          shift, and go to state 34
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    brac_open    go to state 42
    block        go to state 43
    S            go to state 44
    S1           go to state 45
    block_stmt   go to state 46
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 17

    6 decl: T_TYPEDEF type . ID ';'
   11 type: type . '*'

    ID   shift, and go to state 52
    '*'  shift, and go to state 22


State 18

    0 $accept: code $end .

    $default  accept


State 19

    3 code: decl code .

    $default  reduce using rule 3 (code)


State 20

   21 func: ID . '(' args ')'
   22     | ID . '(' ')'
   74 identifier: ID .
   75           | ID . array

    '('  shift, and go to state 53
    '['  shift, and go to state 54

    $default  reduce using rule 74 (identifier)

    array  go to state 55


State 21

   23 func: T_MAIN . '(' args ')'
   24     | T_MAIN . '(' ')'

    '('  shift, and go to state 56


State 22

   11 type: type '*' .

    $default  reduce using rule 11 (type)


State 23

    7 decl: type func . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '{'          shift, and go to state 34
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    brac_open    go to state 42
    block        go to state 57
    S            go to state 44
    S1           go to state 45
    block_stmt   go to state 46
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 24

    5 decl: type identifier . ';'

    ';'  shift, and go to state 58


State 25

   21 func: ID . '(' args ')'
   22     | ID . '(' ')'

    '('  shift, and go to state 53


State 26

   19 void: void '*' .

    $default  reduce using rule 19 (void)


State 27

    8 decl: void func . block

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '{'          shift, and go to state 34
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    brac_open    go to state 42
    block        go to state 59
    S            go to state 44
    S1           go to state 45
    block_stmt   go to state 46
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 28

   46 block_stmt: T_FOR . '(' S1 ';' S1 ';' S1 ')' '{' M '}'

    '('  shift, and go to state 60


State 29

   44 block_stmt: T_IF . '(' stmt ')' '{' Marker_e M '}'
   45           | T_IF . '(' stmt ')' '{' Marker_e M '}' T_ELSE '{' Marker_e M '}'

    '('  shift, and go to state 61


State 30

   47 block_stmt: T_WHILE . '(' S1 ')' '{' M '}'

    '('  shift, and go to state 62


State 31

   38 S1: T_RETURN . expr
   39   | T_RETURN .

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    $default  reduce using rule 39 (S1)

    func         go to state 41
    expr         go to state 63
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 32

   73 number: T_DEC_FLOAT .

    $default  reduce using rule 73 (number)


State 33

   72 number: T_DEC_INT .

    $default  reduce using rule 72 (number)


State 34

   27 brac_open: '{' .

    $default  reduce using rule 27 (brac_open)


State 35

   65 expr: '(' . expr ')'

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 64
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 36

   67 expr: '+' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 65
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 37

   68 expr: '-' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 66
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 38

   70 expr: '*' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 67
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 39

   64 expr: '!' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 68
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 40

   11 type: type . '*'
   37 S1: type . init

    ID   shift, and go to state 69
    '*'  shift, and go to state 22

    init         go to state 70
    assign_stmt  go to state 71
    identifier   go to state 72


State 41

   50 expr: func .

    $default  reduce using rule 50 (expr)


State 42

   29 block: brac_open . M brac_close

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    M            go to state 73
    S            go to state 74
    S1           go to state 45
    block_stmt   go to state 46
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 43

    9 decl: T_STRUCT ID block . ';'

    ';'  shift, and go to state 75


State 44

   30 block: S .

    $default  reduce using rule 30 (block)


State 45

   33 S: S1 . ';'

    ';'  shift, and go to state 76


State 46

   34 S: block_stmt .

    $default  reduce using rule 34 (S)


State 47

   35 S1: stmt . ',' S1
   36   | stmt .

    ','  shift, and go to state 77

    $default  reduce using rule 36 (S1)


State 48

   48 stmt: expr .
   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    T_AND                 shift, and go to state 78
    T_GREATER_THAN_EQUAL  shift, and go to state 79
    T_LESS_THAN_EQUAL     shift, and go to state 80
    T_EQUAL_TEST          shift, and go to state 81
    T_NOT_EQUAL           shift, and go to state 82
    T_OR                  shift, and go to state 83
    '>'                   shift, and go to state 84
    '<'                   shift, and go to state 85
    '+'                   shift, and go to state 86
    '-'                   shift, and go to state 87
    '*'                   shift, and go to state 88
    '/'                   shift, and go to state 89
    '%'                   shift, and go to state 90

    $default  reduce using rule 48 (stmt)


State 49

   57 expr: assign_stmt .

    $default  reduce using rule 57 (expr)


State 50

   69 expr: number .

    $default  reduce using rule 69 (expr)


State 51

   66 expr: identifier .
   71 assign_stmt: identifier . '=' expr

    '='  shift, and go to state 91

    $default  reduce using rule 66 (expr)


State 52

    6 decl: T_TYPEDEF type ID . ';'

    ';'  shift, and go to state 92


State 53

   21 func: ID '(' . args ')'
   22     | ID '(' . ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    ')'          shift, and go to state 93

    type   go to state 94
    basic  go to state 14
    args   go to state 95


State 54

   76 array: '[' . ID ']' array
   77      | '[' . ID ']'
   78      | '[' . T_DEC_INT ']'
   79      | '[' . T_DEC_INT ']' array

    T_DEC_INT  shift, and go to state 96
    ID         shift, and go to state 97


State 55

   75 identifier: ID array .

    $default  reduce using rule 75 (identifier)


State 56

   23 func: T_MAIN '(' . args ')'
   24     | T_MAIN '(' . ')'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9
    ')'          shift, and go to state 98

    type   go to state 94
    basic  go to state 14
    args   go to state 99


State 57

    7 decl: type func block .

    $default  reduce using rule 7 (decl)


State 58

    5 decl: type identifier ';' .

    $default  reduce using rule 5 (decl)


State 59

    8 decl: void func block .

    $default  reduce using rule 8 (decl)


State 60

   46 block_stmt: T_FOR '(' . S1 ';' S1 ';' S1 ')' '{' M '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    S1           go to state 100
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 61

   44 block_stmt: T_IF '(' . stmt ')' '{' Marker_e M '}'
   45           | T_IF '(' . stmt ')' '{' Marker_e M '}' T_ELSE '{' Marker_e M '}'

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    stmt         go to state 101
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 62

   47 block_stmt: T_WHILE '(' . S1 ')' '{' M '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    S1           go to state 102
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 63

   38 S1: T_RETURN expr .
   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    T_AND                 shift, and go to state 78
    T_GREATER_THAN_EQUAL  shift, and go to state 79
    T_LESS_THAN_EQUAL     shift, and go to state 80
    T_EQUAL_TEST          shift, and go to state 81
    T_NOT_EQUAL           shift, and go to state 82
    T_OR                  shift, and go to state 83
    '>'                   shift, and go to state 84
    '<'                   shift, and go to state 85
    '+'                   shift, and go to state 86
    '-'                   shift, and go to state 87
    '*'                   shift, and go to state 88
    '/'                   shift, and go to state 89
    '%'                   shift, and go to state 90

    $default  reduce using rule 38 (S1)


State 64

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr
   65     | '(' expr . ')'

    T_AND                 shift, and go to state 78
    T_GREATER_THAN_EQUAL  shift, and go to state 79
    T_LESS_THAN_EQUAL     shift, and go to state 80
    T_EQUAL_TEST          shift, and go to state 81
    T_NOT_EQUAL           shift, and go to state 82
    T_OR                  shift, and go to state 83
    '>'                   shift, and go to state 84
    '<'                   shift, and go to state 85
    '+'                   shift, and go to state 86
    '-'                   shift, and go to state 87
    '*'                   shift, and go to state 88
    '/'                   shift, and go to state 89
    '%'                   shift, and go to state 90
    ')'                   shift, and go to state 103


State 65

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr
   67     | '+' expr .

    $default  reduce using rule 67 (expr)


State 66

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr
   68     | '-' expr .

    $default  reduce using rule 68 (expr)


State 67

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr
   70     | '*' expr .

    $default  reduce using rule 70 (expr)


State 68

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr
   64     | '!' expr .

    $default  reduce using rule 64 (expr)


State 69

   74 identifier: ID .
   75           | ID . array

    '['  shift, and go to state 54

    $default  reduce using rule 74 (identifier)

    array  go to state 55


State 70

   37 S1: type init .

    $default  reduce using rule 37 (S1)


State 71

   40 init: assign_stmt . ',' init
   42     | assign_stmt .

    ','  shift, and go to state 104

    $default  reduce using rule 42 (init)


State 72

   41 init: identifier . ',' init
   43     | identifier .
   71 assign_stmt: identifier . '=' expr

    ','  shift, and go to state 105
    '='  shift, and go to state 91

    $default  reduce using rule 43 (init)


State 73

   29 block: brac_open M . brac_close

    '}'  shift, and go to state 106

    brac_close  go to state 107


State 74

   31 M: S . M
   32  | S .

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    $default  reduce using rule 32 (M)

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    M            go to state 108
    S            go to state 74
    S1           go to state 45
    block_stmt   go to state 46
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 75

    9 decl: T_STRUCT ID block ';' .

    $default  reduce using rule 9 (decl)


State 76

   33 S: S1 ';' .

    $default  reduce using rule 33 (S)


State 77

   35 S1: stmt ',' . S1

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    S1           go to state 109
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 78

   62 expr: expr T_AND . Marker_e expr

    $default  reduce using rule 2 (epsilon)

    Marker_e  go to state 110
    epsilon   go to state 111


State 79

   55 expr: expr T_GREATER_THAN_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 112
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 80

   54 expr: expr T_LESS_THAN_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 113
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 81

   51 expr: expr T_EQUAL_TEST . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 114
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 82

   56 expr: expr T_NOT_EQUAL . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 115
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 83

   63 expr: expr T_OR . Marker_e expr

    $default  reduce using rule 2 (epsilon)

    Marker_e  go to state 116
    epsilon   go to state 111


State 84

   53 expr: expr '>' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 117
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 85

   52 expr: expr '<' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 118
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 86

   49 expr: expr '+' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 119
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 87

   58 expr: expr '-' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 120
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 88

   59 expr: expr '*' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 121
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 89

   60 expr: expr '/' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 122
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 90

   61 expr: expr '%' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 123
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 91

   71 assign_stmt: identifier '=' . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 124
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 92

    6 decl: T_TYPEDEF type ID ';' .

    $default  reduce using rule 6 (decl)


State 93

   22 func: ID '(' ')' .

    $default  reduce using rule 22 (func)


State 94

   11 type: type . '*'
   25 args: type . identifier ',' args
   26     | type . identifier

    ID   shift, and go to state 69
    '*'  shift, and go to state 22

    identifier  go to state 125


State 95

   21 func: ID '(' args . ')'

    ')'  shift, and go to state 126


State 96

   78 array: '[' T_DEC_INT . ']'
   79      | '[' T_DEC_INT . ']' array

    ']'  shift, and go to state 127


State 97

   76 array: '[' ID . ']' array
   77      | '[' ID . ']'

    ']'  shift, and go to state 128


State 98

   24 func: T_MAIN '(' ')' .

    $default  reduce using rule 24 (func)


State 99

   23 func: T_MAIN '(' args . ')'

    ')'  shift, and go to state 129


State 100

   46 block_stmt: T_FOR '(' S1 . ';' S1 ';' S1 ')' '{' M '}'

    ';'  shift, and go to state 130


State 101

   44 block_stmt: T_IF '(' stmt . ')' '{' Marker_e M '}'
   45           | T_IF '(' stmt . ')' '{' Marker_e M '}' T_ELSE '{' Marker_e M '}'

    ')'  shift, and go to state 131


State 102

   47 block_stmt: T_WHILE '(' S1 . ')' '{' M '}'

    ')'  shift, and go to state 132


State 103

   65 expr: '(' expr ')' .

    $default  reduce using rule 65 (expr)


State 104

   40 init: assign_stmt ',' . init

    ID  shift, and go to state 69

    init         go to state 133
    assign_stmt  go to state 71
    identifier   go to state 72


State 105

   41 init: identifier ',' . init

    ID  shift, and go to state 69

    init         go to state 134
    assign_stmt  go to state 71
    identifier   go to state 72


State 106

   28 brac_close: '}' .

    $default  reduce using rule 28 (brac_close)


State 107

   29 block: brac_open M brac_close .

    $default  reduce using rule 29 (block)


State 108

   31 M: S M .

    $default  reduce using rule 31 (M)


State 109

   35 S1: stmt ',' S1 .

    $default  reduce using rule 35 (S1)


State 110

   62 expr: expr T_AND Marker_e . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 135
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 111

    1 Marker_e: epsilon .

    $default  reduce using rule 1 (Marker_e)


State 112

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   55     | expr T_GREATER_THAN_EQUAL expr .
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    T_LESS_THAN_EQUAL  shift, and go to state 80
    '<'                shift, and go to state 85
    '+'                shift, and go to state 86
    '-'                shift, and go to state 87
    '*'                shift, and go to state 88
    '/'                shift, and go to state 89
    '%'                shift, and go to state 90

    $default  reduce using rule 55 (expr)


State 113

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   54     | expr T_LESS_THAN_EQUAL expr .
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 54 (expr)


State 114

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   51     | expr T_EQUAL_TEST expr .
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    T_GREATER_THAN_EQUAL  shift, and go to state 79
    T_LESS_THAN_EQUAL     shift, and go to state 80
    '>'                   shift, and go to state 84
    '<'                   shift, and go to state 85
    '+'                   shift, and go to state 86
    '-'                   shift, and go to state 87
    '*'                   shift, and go to state 88
    '/'                   shift, and go to state 89
    '%'                   shift, and go to state 90

    $default  reduce using rule 51 (expr)


State 115

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   56     | expr T_NOT_EQUAL expr .
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    T_GREATER_THAN_EQUAL  shift, and go to state 79
    T_LESS_THAN_EQUAL     shift, and go to state 80
    '>'                   shift, and go to state 84
    '<'                   shift, and go to state 85
    '+'                   shift, and go to state 86
    '-'                   shift, and go to state 87
    '*'                   shift, and go to state 88
    '/'                   shift, and go to state 89
    '%'                   shift, and go to state 90

    $default  reduce using rule 56 (expr)


State 116

   63 expr: expr T_OR Marker_e . expr

    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    func         go to state 41
    expr         go to state 136
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 117

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   53     | expr '>' expr .
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    T_LESS_THAN_EQUAL  shift, and go to state 80
    '<'                shift, and go to state 85
    '+'                shift, and go to state 86
    '-'                shift, and go to state 87
    '*'                shift, and go to state 88
    '/'                shift, and go to state 89
    '%'                shift, and go to state 90

    $default  reduce using rule 53 (expr)


State 118

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   52     | expr '<' expr .
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 52 (expr)


State 119

   49 expr: expr . '+' expr
   49     | expr '+' expr .
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 49 (expr)


State 120

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   58     | expr '-' expr .
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 58 (expr)


State 121

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   59     | expr '*' expr .
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    $default  reduce using rule 59 (expr)


State 122

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   60     | expr '/' expr .
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    $default  reduce using rule 60 (expr)


State 123

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   61     | expr '%' expr .
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr

    $default  reduce using rule 61 (expr)


State 124

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr
   71 assign_stmt: identifier '=' expr .

    T_AND                 shift, and go to state 78
    T_GREATER_THAN_EQUAL  shift, and go to state 79
    T_LESS_THAN_EQUAL     shift, and go to state 80
    T_EQUAL_TEST          shift, and go to state 81
    T_NOT_EQUAL           shift, and go to state 82
    T_OR                  shift, and go to state 83
    '>'                   shift, and go to state 84
    '<'                   shift, and go to state 85
    '+'                   shift, and go to state 86
    '-'                   shift, and go to state 87
    '*'                   shift, and go to state 88
    '/'                   shift, and go to state 89
    '%'                   shift, and go to state 90

    $default  reduce using rule 71 (assign_stmt)


State 125

   25 args: type identifier . ',' args
   26     | type identifier .

    ','  shift, and go to state 137

    $default  reduce using rule 26 (args)


State 126

   21 func: ID '(' args ')' .

    $default  reduce using rule 21 (func)


State 127

   78 array: '[' T_DEC_INT ']' .
   79      | '[' T_DEC_INT ']' . array

    '['  shift, and go to state 54

    $default  reduce using rule 78 (array)

    array  go to state 138


State 128

   76 array: '[' ID ']' . array
   77      | '[' ID ']' .

    '['  shift, and go to state 54

    $default  reduce using rule 77 (array)

    array  go to state 139


State 129

   23 func: T_MAIN '(' args ')' .

    $default  reduce using rule 23 (func)


State 130

   46 block_stmt: T_FOR '(' S1 ';' . S1 ';' S1 ')' '{' M '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    S1           go to state 140
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 131

   44 block_stmt: T_IF '(' stmt ')' . '{' Marker_e M '}'
   45           | T_IF '(' stmt ')' . '{' Marker_e M '}' T_ELSE '{' Marker_e M '}'

    '{'  shift, and go to state 141


State 132

   47 block_stmt: T_WHILE '(' S1 ')' . '{' M '}'

    '{'  shift, and go to state 142


State 133

   40 init: assign_stmt ',' init .

    $default  reduce using rule 40 (init)


State 134

   41 init: identifier ',' init .

    $default  reduce using rule 41 (init)


State 135

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   62     | expr T_AND Marker_e expr .
   63     | expr . T_OR Marker_e expr

    T_GREATER_THAN_EQUAL  shift, and go to state 79
    T_LESS_THAN_EQUAL     shift, and go to state 80
    T_EQUAL_TEST          shift, and go to state 81
    T_NOT_EQUAL           shift, and go to state 82
    '>'                   shift, and go to state 84
    '<'                   shift, and go to state 85
    '+'                   shift, and go to state 86
    '-'                   shift, and go to state 87
    '*'                   shift, and go to state 88
    '/'                   shift, and go to state 89
    '%'                   shift, and go to state 90

    $default  reduce using rule 62 (expr)


State 136

   49 expr: expr . '+' expr
   51     | expr . T_EQUAL_TEST expr
   52     | expr . '<' expr
   53     | expr . '>' expr
   54     | expr . T_LESS_THAN_EQUAL expr
   55     | expr . T_GREATER_THAN_EQUAL expr
   56     | expr . T_NOT_EQUAL expr
   58     | expr . '-' expr
   59     | expr . '*' expr
   60     | expr . '/' expr
   61     | expr . '%' expr
   62     | expr . T_AND Marker_e expr
   63     | expr . T_OR Marker_e expr
   63     | expr T_OR Marker_e expr .

    T_AND                 shift, and go to state 78
    T_GREATER_THAN_EQUAL  shift, and go to state 79
    T_LESS_THAN_EQUAL     shift, and go to state 80
    T_EQUAL_TEST          shift, and go to state 81
    T_NOT_EQUAL           shift, and go to state 82
    '>'                   shift, and go to state 84
    '<'                   shift, and go to state 85
    '+'                   shift, and go to state 86
    '-'                   shift, and go to state 87
    '*'                   shift, and go to state 88
    '/'                   shift, and go to state 89
    '%'                   shift, and go to state 90

    $default  reduce using rule 63 (expr)


State 137

   25 args: type identifier ',' . args

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_BOOL       shift, and go to state 9

    type   go to state 94
    basic  go to state 14
    args   go to state 143


State 138

   79 array: '[' T_DEC_INT ']' array .

    $default  reduce using rule 79 (array)


State 139

   76 array: '[' ID ']' array .

    $default  reduce using rule 76 (array)


State 140

   46 block_stmt: T_FOR '(' S1 ';' S1 . ';' S1 ')' '{' M '}'

    ';'  shift, and go to state 144


State 141

   44 block_stmt: T_IF '(' stmt ')' '{' . Marker_e M '}'
   45           | T_IF '(' stmt ')' '{' . Marker_e M '}' T_ELSE '{' Marker_e M '}'

    $default  reduce using rule 2 (epsilon)

    Marker_e  go to state 145
    epsilon   go to state 111


State 142

   47 block_stmt: T_WHILE '(' S1 ')' '{' . M '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    M            go to state 146
    S            go to state 74
    S1           go to state 45
    block_stmt   go to state 46
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 143

   25 args: type identifier ',' args .

    $default  reduce using rule 25 (args)


State 144

   46 block_stmt: T_FOR '(' S1 ';' S1 ';' . S1 ')' '{' M '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    S1           go to state 147
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 145

   44 block_stmt: T_IF '(' stmt ')' '{' Marker_e . M '}'
   45           | T_IF '(' stmt ')' '{' Marker_e . M '}' T_ELSE '{' Marker_e M '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    M            go to state 148
    S            go to state 74
    S1           go to state 45
    block_stmt   go to state 46
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 146

   47 block_stmt: T_WHILE '(' S1 ')' '{' M . '}'

    '}'  shift, and go to state 149


State 147

   46 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 . ')' '{' M '}'

    ')'  shift, and go to state 150


State 148

   44 block_stmt: T_IF '(' stmt ')' '{' Marker_e M . '}'
   45           | T_IF '(' stmt ')' '{' Marker_e M . '}' T_ELSE '{' Marker_e M '}'

    '}'  shift, and go to state 151


State 149

   47 block_stmt: T_WHILE '(' S1 ')' '{' M '}' .

    $default  reduce using rule 47 (block_stmt)


State 150

   46 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 ')' . '{' M '}'

    '{'  shift, and go to state 152


State 151

   44 block_stmt: T_IF '(' stmt ')' '{' Marker_e M '}' .
   45           | T_IF '(' stmt ')' '{' Marker_e M '}' . T_ELSE '{' Marker_e M '}'

    T_ELSE  shift, and go to state 153

    $default  reduce using rule 44 (block_stmt)


State 152

   46 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 ')' '{' . M '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    M            go to state 154
    S            go to state 74
    S1           go to state 45
    block_stmt   go to state 46
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 153

   45 block_stmt: T_IF '(' stmt ')' '{' Marker_e M '}' T_ELSE . '{' Marker_e M '}'

    '{'  shift, and go to state 155


State 154

   46 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 ')' '{' M . '}'

    '}'  shift, and go to state 156


State 155

   45 block_stmt: T_IF '(' stmt ')' '{' Marker_e M '}' T_ELSE '{' . Marker_e M '}'

    $default  reduce using rule 2 (epsilon)

    Marker_e  go to state 157
    epsilon   go to state 111


State 156

   46 block_stmt: T_FOR '(' S1 ';' S1 ';' S1 ')' '{' M '}' .

    $default  reduce using rule 46 (block_stmt)


State 157

   45 block_stmt: T_IF '(' stmt ')' '{' Marker_e M '}' T_ELSE '{' Marker_e . M '}'

    T_CHAR       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_INT        shift, and go to state 5
    T_FLOAT      shift, and go to state 6
    T_LONG_LONG  shift, and go to state 7
    T_FOR        shift, and go to state 28
    T_IF         shift, and go to state 29
    T_WHILE      shift, and go to state 30
    T_RETURN     shift, and go to state 31
    T_BOOL       shift, and go to state 9
    T_DEC_FLOAT  shift, and go to state 32
    T_DEC_INT    shift, and go to state 33
    ID           shift, and go to state 20
    T_MAIN       shift, and go to state 21
    '('          shift, and go to state 35
    '+'          shift, and go to state 36
    '-'          shift, and go to state 37
    '*'          shift, and go to state 38
    '!'          shift, and go to state 39

    type         go to state 40
    basic        go to state 14
    func         go to state 41
    M            go to state 158
    S            go to state 74
    S1           go to state 45
    block_stmt   go to state 46
    stmt         go to state 47
    expr         go to state 48
    assign_stmt  go to state 49
    number       go to state 50
    identifier   go to state 51


State 158

   45 block_stmt: T_IF '(' stmt ')' '{' Marker_e M '}' T_ELSE '{' Marker_e M . '}'

    '}'  shift, and go to state 159


State 159

   45 block_stmt: T_IF '(' stmt ')' '{' Marker_e M '}' T_ELSE '{' Marker_e M '}' .

    $default  reduce using rule 45 (block_stmt)
